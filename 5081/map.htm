<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
<title>2015-5081</title>
<style type="text/css">  
	@import url("map.files/web/js/imgctrl/lytebox.css"); 
</style> 
<!-- embedded CSS file from "C:\PF\Utils\HOLUX ezTour21\web\css\gmapviewV3.css" -->
<!-- START HERE -->
<style type="text/css">  
/* iTravel Tech google map view V3 CSS */

html, body { 
  height: 100%;
  overflow: hidden;
}

body {
  background-color: white;
  font-family: Arial, sans-serif;
  margin: 0px; 
  padding: 0px;
}
    
#photoList {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  width: 180px; /*Width of frame div*/
  height: 100%;
  overflow: auto; /* hidden: Disable scrollbars. Set to "scroll" to enable*/
  text-align: center;
  background: black;
  color: white;
}

.toggleopacity img{
  filter:progid:DXImageTransform.Microsoft.Alpha(opacity=50);
  -moz-opacity: 0.9;
}

.toggleopacity:hover img{
  filter:progid:DXImageTransform.Microsoft.Alpha(opacity=100);
  -moz-opacity: 1;
}

.toggleopacity img{
  border: 1px solid #ccc;
}

.toggleborder:hover img{
  border: 1px solid white;
}

.toggleborder:hover{
  color: red; /* Dummy definition to overcome IE bug */
}

#objectListBar {
	/* float: right; */
	position:absolute;
	top: 30px;
	right: 5px;
	z-index:101;
	/* border: 1px solid #000000; */
	/* width: 175px; */
	/* padding: 5px 6px; */
	margin: 0;
	font-family: Arial, sans-serif;
	font-size: small;
	/* background-color: #ffffff; */
}

#gMap { 
  height: 100%;
}

* html body{ /*IE6 hack*/
  padding: 0 0 0 0; /*Set value to (0 WidthOfFrameDiv 0 0)*/
}

* html { /*IE6 hack*/
  height: 100%; 
  width: 100%; 
}

#tBar { 
  position: absolute; 
  top: 50px; 
  right: 10px; 
  padding: 1px;
  width: 20px; 
  background: #ffffcc; 
  border: 1px solid #ffffcc; 
  font: 11px, Tahoma, Verdana, Helvetica, sans-serif; 
}

.cButton { 
  border: 1px solid white; 
}

.pmInfo { 
  font: 11px, Tahoma, Verdana, Helvetica, sans-serif;
  left: 10px; 
  top: 10px; 
  overflow: hidden; 
  width: 250px; 
  height: 350px;  //Mary 
}

.lineInfo { 
  font: 11px, Tahoma, Verdana, Helvetica, sans-serif;
  left: 10px; 
  top: 10px; 
  overflow: hidden;
  width: 200px; 
  height: 100px;  //Mary 
}

.pmLocate { 
  font: 11px, Tahoma, Verdana, Helvetica, sans-serif;
  left: 10px; 
  top: 10px; 
  overflow: auto; 
  width: 160px; 
  height: 20px; 
  background-color: #ccffcc; 
}

.posTip {
  padding: 2px;
  font: 11px, Tahoma, Verdana, Helvetica, sans-serif;
  background-color: #ffffcc;
  border: 2px solid white;
}

.poiFile a { text-decoration:none; }
.poiFile a:link { text-decoration:none; }
.poiFile a:visited { text-decoration:none; }

#sBar { 
  position: absolute; 
  bottom: 2px; 
  left: 2px; 
  padding: 1px;
  width: 200px;
  height: 21px;
  background: #ffffcc; 
  border: 1px solid #ffffcc; 
  font: 11px, Tahoma, Verdana, Helvetica, sans-serif; 
  overflow: hidden;
}

#sForm {
  width: 100%;
  font: 11px, Tahoma, Verdana, Helvetica, sans-serif;
}

a.squarebutton
{
	background: transparent url('http://www.iTravel-Tech.com/media/square-blue-left.gif') no-repeat top left;
	display: block;
	float: left;
	font: normal 10px Arial; /* Change 12px as desired */
	line-height: 15px; /* This value + 4px + 4px (top and bottom padding of SPAN) must equal height of button background (default is 23px) */
	height: 23px; /* Height of button background height */
	padding-left: 9px; /* Width of left menu image */
	text-decoration: none;
}

a:link.squarebutton, a:visited.squarebutton, a:active.squarebutton{
	color: #494949; /*button text color*/
}

a.squarebutton span{
	background: transparent url('http://www.iTravel-Tech.com/media/square-blue-right.gif') no-repeat top right;
	display: block;
	padding: 4px 9px 4px 0; /*Set 9px below to match value of 'padding-left' value above*/
}

a.squarebutton:hover{ /* Hover state CSS */
	background-position: bottom left;
}

a.squarebutton:hover span{ /* Hover state CSS */
	background-position: bottom right;
	color: black;
}

#ScreenCapture_buttonwrapper { /* Container you can use to surround a CSS button to clear float */
  position: absolute; 
  top: 10px; 
  left: 75px; 
  padding: 1px;
  width: 130px; 
}
</style> 
<!-- END HERE -->
<script src="https://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>
<!-- embedded JSS file from "C:\PF\Utils\HOLUX ezTour21\web\js\gmap\stbl\EN.js" -->
<!-- START HERE -->
<script  type="text/javascript">
//<![CDATA[
//
// java script for itravel-tech gmap view's string table
// Language: English
//

var strTBar_Reload_Tip = "Reload";
var strTBar_SlideShow_Tip = "Slide Show";
var strTBar_AddPlaceMark_Tip = "Add Placemark";
var strTBar_AddDestination_Tip = "Add Finder";
var strInfoWin_Edit_Cmd = "Edit";
var strInfoWin_ScreenCapture = "Screen Capture...";
var strInfoWin_SaveAsTarget_Cmd = "Save As Target";
var strInfoWin_LineFit_Cmd = "Fit";
var strMsgCannotFindResult = "Can't find the result in Google Map!";
var strInfoWin_BackToInfoCmd = "Back to Info";
var strInfoWIn_ShowLocationCmd = "Show Location";
var strFailToLoadGoogleMap = '<h3>Failed to load Google Map!</h3>' 
+ '<p style="color: #990000"><b>The Internet Exporler on your machine seems not compatible with Google Map, please go through the following steps to verify.</b></p>' 
+ '<ul>'
+ '<li>Invoke IE to open "maps.google.com", please check you can see world map on IE or not?</li>'
+ '<li>If you use proxy, please disable it, and try again.</li>'
+ '<li>Please clean the cache file of IE, and try again.</li>'
+ '<li>Please update your IE to IE7 or above, and try again.</li>'
+ '</ul>'
+ '<br><br><center><input type=submit value="Reload Google Map again" onClick="location.href=\'CMD:ReloadGoogleMapPage\'"></form></center>';

//]]>
</script>
<!-- END HERE -->
<script src="map.files/web/js/imgctrl/lytebox.js" type="text/javascript"></script>
<!-- embedded JSS file from "C:\PF\Utils\HOLUX ezTour21\web\js\gmapV3\gmapviewV3.js" -->
<!-- START HERE -->
<script  type="text/javascript">
//<![CDATA[
// javascript & CSS include function
var getHead = function() { return document.getElementsByTagName("head")[0]; };
var includeJavascriptFile = function(url) {
        if (document.body == null) {
            var htmlString = "<script src='" + url;
            htmlString += "' type='text/javascript'" + ">";
            htmlString += "</" + "script>";
            document.write(htmlString);
        } else {
            var script = document.createElement("script");
            script.type = "text/javascript";
            script.language = "JavaScript";
            script.src = url;
            getHead().appendChild(script);
        }
    };
var includeCssFile = function(url) {
        if (document.body == null) {
            document.write("<link rel='stylesheet' href='" + url + "' type='text/css'/>");
        } else {
            var link = document.createElement("link");
            link.setAttribute("rel", "stylesheet");
            link.setAttribute("type", "text/css");
            link.setAttribute("href", url);
            getHead().appendChild(link);
        }
    };
 
//
// java script for itravel-tech gmap view's global variable
//
 
// for map
var gvbMapInit = false;
var gvbChinaMap = false;
var gvoMap = null;   // map object of gmap
var gvoGE = null;    // earth object of gmap
var gvoaMapTypes = null;     // map types of gmap
var gvnFitZoom = 14; // zoom level for fit window
var gvoFitBound = null;
var gvoEnableEarthView = false;
var gvoCurrMapType = null;
var gvoInfowindow = null;

// for search
var gvoLocalSearch = null;
var gvoSearchForm = null;
var gvoLocalSearchCtrl = null;

// refresh Google Map Timer
var gvoRefreshGoogleMapTimer = true;
var gvoRefreshTimeout = 30*60*1000; // 30mins
function SetRefreshTimer()
{
    if (gvoRefreshGoogleMapTimer == true)
        setTimeout("appReload();", gvoRefreshTimeout);
}


// include icon image URL JS file
var gvoIconImageURLPath = null;
includeJavascriptFile("http://www.iTravel-Tech.com/PhotoTagger/loadIconUrl.js");

// icons ...
var gvoLocateIcon = null;
var gvoLineIcon = null;
var gvoLineMinimapPOIIcon = null;
var gvoUserPOIIcon = null;
var gvoUserDestIcon = null;
var gvoSearchIcon = null;
var gvoGraphMarkerIcon1 = null;
var gvoGraphMarkerIcon2 = null;

// type icon marker
var gvoTypeIconMarkerAry = [];
var gvoTypeIconAry = [];

// markers ...
var gvoLocateMarker = null;
var gvoLocateLabel = null;
var gvoGraphMarker1 = null;
var gvoGraphMarker2 = null;

// tracker markers
var gvoTrackerMarkerAry = null;
var gvoTrackerMarkerIconAry = null;
var gvoLastVisibleTrackMarker = null;

// focus ...
var gvnCurZoom = 14; // zoom level for current window
var gvnCurPOIID = 0;
var gvnCurLineID = 0;
var gvoCenterPoint = null;
var gvoCurMapBounds = null; // full bounds of data
var gvsCurMapType = null;
var gvbBullonOnfocus = false;
var gvoAddPOI = {'mode':false, 'maker':null, 'moveHDL':null, 'clickHDL':null };

// default color array 
var gvoaColors = ['#5500ff','#ff007f','#555500','#aa55ff','#00aa7f','#aaaa00','#55ffff','#ffff7f','#550000','#00557f'];

// communicate with app
var gvsProductPath = null;
var gvbAppSelectFlag = false;
var gvnPoiType = 9;
var gvnLineType = 11;

// data
var gvoInitOption = null;
var gvoaMarkers = null;
var gvoaLines = null;
var gvoaIcons = [];

// trackList combo box
var gTrackListCmbBox = null;
var gPhotoListCtrl = null;

// viewing option
var gDisplayLogo = false;
var gDisplayLogoFileName = null;

// function option
var gCanAddDestination = false;
var gApJsCtrl = true;
var gvoEnableEarthView = true;
var gvoEnableEditMap = true;
//var gvoEnableScreenCapture = true;
var gvoEnableScreenCapture = false;
var gvoEnableGraphMarkers = false;

// debug
var gvbDebug = 0;

// define ObjectList class
var ObjectList = function(objectListBarIdName) {
    // private properties, e.g. strings to translate
    var m_objectListBarDom = document.getElementById(objectListBarIdName);
    
    var m_trackListDomId = 'trackSelect';
    var m_trackListDom = null;
    var m_allTracks = 'All Tracks';
    
    // private methods
	    
    return {       
        // public methods
        insertNewTrack: function(pnLine) {
            if (m_objectListBarDom.innerHTML == '') {
               m_trackListDom = document.createElement('select');
               m_trackListDom.setAttribute('id', m_trackListDomId);
               m_trackListDom.style.width = "175px";
               m_trackListDom.onchange = function() { gTrackListCmbBox.selectCurrentTrack(); };
               m_objectListBarDom.appendChild(m_trackListDom);
                    
               //var allTracksOption = new Option(m_allTracks, m_allTracks);
               //allTracksOption.id = m_allTracks;
               //m_trackListDom.add(allTracksOption, 0);
               //allTracksOption.selected = true;
            }
            var newTrackOptionDom = document.createElement('option');
            m_trackListDom.appendChild(newTrackOptionDom);
            newTrackOptionDom.setAttribute('id', 'track_'+pnLine.id);
            newTrackOptionDom.text = pnLine.name;
            newTrackOptionDom.value = pnLine.id;
        },
        updateCurrentSelection: function(pnLine) {
            if (!m_trackListDom)
                return -1;
            
            if (pnLine) {
                var i = 1;
                for (i = 1; i < m_trackListDom.length; i++) {
                    if (m_trackListDom.options[i].id == 'track_'+pnLine.id) {
                        m_trackListDom.selectedIndex = i;
                        return i;
                    }
                }
            } else {
                m_trackListDom.selectedIndex = 0;
            }
            return m_trackListDom.selectedIndex;
        },
        selectCurrentTrack: function() {
            if (!m_trackListDom)
                return;
                
            var optionValue = m_trackListDom.options[m_trackListDom.selectedIndex].value;
            //if (optionValue != m_allTracks) {
                onFitLine('gvnLineType', optionValue);
                var line = findLine(optionValue);
                if (line != null && line.startMarker != null) {
                    if (line.locationMarker != null) {
                        if (gvoLocateMarker != null) {
                            gvoLocateMarker.setVisible(false);
                        }
                        gvoLocateMarker = line.locationMarker;
                        gvoLocateMarker.setPosition(line.startMarker.getPosition());
                        gvoLocateMarker.setVisible(true);
                    }
                   google.maps.event.trigger(line.startMarker, "click");
                   var latlng = line.startMarker.getPosition();
                   onPosition(latlng.lat(), latlng.lng());
                }
            //} else {
            //    gvoMap.getInfoWindow().hide();
            //    var boundsCenter = gvoFitBound.getCenter();
            //    var fitZoomLevel = gvoMap.getBoundsZoomLevel(gvoFitBound);
            //    gvoMap.setCenter(boundsCenter, fitZoomLevel-1);
            //}
        }
    }
};

// define PhotoList class
var PhotoList = function(photoListWndId) {
    // private properties, e.g. strings to translate
    var m_photoListWndDom = document.getElementById(photoListWndId);
    
    // private methods
	    
    return {       
        // public methods
        insertNewPhoto: function(photoId, poiId) {
            var photoThumb = photoId.thumb;
            var photoTitle = photoId.title;
            var newLink = document.createElement('a');
            newLink.href = 'javascript:OnClick=gPhotoListCtrl.selectPhoto('+ poiId.id +')';
            newLink.title = photoTitle;
            newLink.className = 'toggleborder';
            
            //var newImage = document.createElement('img');
            var newImage = new Image();
            newImage.src = photoThumb;
            newImage.alt = photoTitle;
            newImage.border = "0px";
            newImage.style.padding = "1px 1px";
            
            newLink.appendChild(newImage);
            m_photoListWndDom.appendChild(newLink);
        },
        selectPhoto: function(poiId) {
            if (gvoInfowindow != null)
                gvoInfowindow.close();
            gvbBullonOnfocus = true; 
            onSelectPOI(gvnPoiType, poiId);
        },
        showPhotoList: function() {
            for (var i = 0; i< gvoaMarkers.length; i++) {
                var poPoi = gvoaMarkers[i];
                if (poPoi == null)
                    continue;
                for (var j=0; j < poPoi.photos.length; j++) {
                    if (poPoi.photos[j] == null)
                        continue;
                    this.insertNewPhoto(poPoi.photos[j], poPoi);
                }
            }
        }
    }
};

// functions ...
function initLayout() {
    if (gvbDebug == true) {
        includeJavascriptFile(gvsProductPath+"dump.js");
    }
    
    commSendCmd('onInitLayout');

    var voDivGmap = document.createElement('div');
    voDivGmap.setAttribute('id', 'gMap');
    document.body.appendChild(voDivGmap);

    if (gApJsCtrl == false) { // for export html
        // create photo list
        if (getPhotoNum() != 0) {
            var voPhotoList = document.createElement('div');
            voPhotoList.setAttribute('id', 'photoList');
            document.body.appendChild(voPhotoList);
            
            document.body.style.padding = "0 180px 0 0";
        } else {
            // remove slide show button
            gvoInitOption.tBar.funcSlideShow = false;
        }
        // create object list bar
        var voObjectListBar = document.createElement('div');
        voObjectListBar.setAttribute('id', 'objectListBar');
        document.body.appendChild(voObjectListBar);
        if (getPhotoNum() != 0) {
            voObjectListBar.style.right = "215px";
        } 
        gTrackListCmbBox = new ObjectList('objectListBar');
        gPhotoListCtrl = new PhotoList('photoList');
        gPhotoListCtrl.showPhotoList();
    } 
         
    //if (typeof(GMap2) != 'undefined') {
        // sBar
        //if (gvoInitOption.sBar == true) {
        //    var voDivSBar = document.createElement('div');
        //    voDivSBar.setAttribute('id', 'sBar');
        //    document.body.appendChild(voDivSBar);
        //    var voDivSForm = document.createElement('div');
        //    voDivSForm.setAttribute('id', 'sForm');
        //    voDivSBar.appendChild(voDivSForm);
        //}  
        if (gvoInitOption.enableScreenCapture != null)
            gvoEnableScreenCapture = gvoInitOption.ScreenCapture;
            
        if (gvoEnableScreenCapture) {
            appCreateScreenCaptureButton();    
        }
        
        if (gvoInitOption.enableGraphMarker != null)
            gvoEnableGraphMarkers = gvoInitOption.enableGraphMarker;
            
        if (gvoInitOption.tBar != null) {
            var voDivTBar = document.createElement('div');
            voDivTBar.setAttribute('id', 'tBar');
    
            // reload function
            //if (gvoInitOption.tBar.funcReload == true)
            //    voDivTBar.innerHTML = "<a href='javascript:OnClick=appReload()' title='Reload'><img src='"+gvsProductPath+"web/js/imgctrl/images/refresh.png' class='cButton' /></a>";
    
            // slideshow function
            if (gvoInitOption.tBar.funcSlideShow == true) {
                var tempHTML = "<a href='javascript:OnClick=actSlideShow()' title='"+strTBar_SlideShow_Tip+"'><img src='"+gvsProductPath+"web/js/imgctrl/images/show.png' class='cButton' /></a>";
                voDivTBar.innerHTML += tempHTML;
            }
      
            // add poi function
            if (gvoInitOption.tBar.funcAddPOI == true) {
                gvoUserPOIIcon = new google.maps.MarkerImage();
                if (gvoIconImageURLPath != null) {
                    gvoUserPOIIcon.url = gvoIconImageURLPath + "add_poi.png";
                } else {
                    gvoUserPOIIcon.url = "http://maps.google.com/mapfiles/kml/pal4/icon48.png";
                }
                gvoUserPOIIcon.size = new google.maps.Size(22, 22);
                gvoUserPOIIcon.anchor = new google.maps.Point(11, 21);
                
                var tempHTML = "<a href='javascript:OnClick=userPOI()' title='"+strTBar_AddPlaceMark_Tip+"'><img src='"+gvoUserPOIIcon.url+"' class='cButton' width=22 /></a>";
                voDivTBar.innerHTML += tempHTML;
            }
            
            // add destination function
            if (gCanAddDestination == true) {
                gvoUserDestIcon = new google.maps.MarkerImage();
                if (gvoIconImageURLPath != null) {
                    gvoUserDestIcon.url = gvoIconImageURLPath + "destination.png";
                } else {
                    gvoUserDestIcon.url = "http://maps.google.com/mapfiles/kml/pal4/icon49.png";
                }
                gvoUserDestIcon.size = new google.maps.Size(22, 22);
                gvoUserDestIcon.anchor = new google.maps.Point(11, 11);
                
                var tempHTML = "<a href='javascript:OnClick=userDest()' title='"+strTBar_AddDestination_Tip+"'><img src='"+gvoUserDestIcon.url+"' class='cButton' width=22 /></a>";
                voDivTBar.innerHTML += tempHTML;
            }
            
            if (gvoInitOption.tBar.funcSlideShow == true ||
                gvoInitOption.tBar.funcAddPOI == true ||
                gCanAddDestination == true) {
                document.body.appendChild(voDivTBar);
                
                if (getPhotoNum() != 0 && gApJsCtrl == false) {
                    voDivTBar.style.right = "190px";
                }
            }
        }
    //}
}

function initGData() {
    gvoLocateIcon = createIcon(gvoInitOption.iconPosOpt);
    gvoLineIcon = createIcon(gvoInitOption.iconLineOpt);
    gvoLineMinimapPOIIcon = createIcon(gvoInitOption.iconMinimapPoiOpt);

    gvoFitBound = new google.maps.LatLngBounds(new google.maps.LatLng(gvoInitOption.startLat, gvoInitOption.startLon), new google.maps.LatLng(gvoInitOption.startLat, gvoInitOption.startLon));
    gvoCenterPoint = new google.maps.LatLng(gvoInitOption.startLat, gvoInitOption.startLon);
  
    if (gApJsCtrl) {
        // Create "Search result" arrow marker icon
        gvoSearchIcon = new google.maps.MarkerImage();
        if (gvoIconImageURLPath != null) {
            gvoSearchIcon.url = gvoIconImageURLPath + "arrow_location.png";
        } else {
            gvoSearchIcon.url = "http://maps.google.com/mapfiles/kml/shapes/poi.png";
        }
        //gvoSearchIcon.shadow = "http://labs.google.com/ridefinder/images/mm_20_shadow.png";
        gvoSearchIcon.size = new google.maps.Size(23, 34);
        //gvoSearchIcon.shadowSize = new GSize(22, 20);
        gvoSearchIcon.anchor = new google.maps.Point(11, 33);
        //gvoSearchIcon.infoWindowAnchor = new GPoint(14, 1);
    }
    if (gvoEnableGraphMarkers) {
        gvoGraphMarkerIcon1 = new google.maps.MarkerImage();
        gvoGraphMarkerIcon1.url = "http://maps.google.com/mapfiles/kml/pal3/icon0.png";
        gvoGraphMarkerIcon1.size = new google.maps.Size(16, 16);
        gvoGraphMarkerIcon1.anchor = new google.maps.Point(7, 7);
        
        gvoGraphMarkerIcon2 = new google.maps.MarkerImage();
        gvoGraphMarkerIcon2.url = "http://maps.google.com/mapfiles/kml/pal3/icon1.png";
        gvoGraphMarkerIcon2.size = new google.maps.Size(16, 16);
        gvoGraphMarkerIcon2.anchor = new google.maps.Point(7, 7);
    }
}

function initTypeIconMarker() {
    // init line and type mapping
    if (gvoInitOption.iconTypeAryOpt != null) {
        var i = 0;
        for (i = 0; i < gvoInitOption.iconTypeAryOpt.length; i++) {
            gvoTypeIconAry[i] = createIcon(gvoInitOption.iconTypeAryOpt[i]);
            gvoTypeIconMarkerAry[i] = new google.maps.Marker({position: new google.maps.LatLng(0, 0), map: gvoMap, icon: gvoTypeIconAry[i], visible: false});
        }                     
    }
}

///////////////////////////////////////////////////////////////////////////////
/// MAIN FUNCTION
///////////////////////////////////////////////////////////////////////////////
function mapMain() {
    // init lytebox.
    myLytebox = new LyteBox();
    
    // init google map
    gvbMapInit = true;
  
    if (gvoLocateIcon == null)  initGData();
    
    // create google map
    var gMapOptions = {
      zoom: gvoInitOption.zoomLevel,
      center: gvoCenterPoint,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      scaleControl: true,
      overviewMapControl: gvoInitOption.mapOverview
    };
    gvoMap = new google.maps.Map(document.getElementById("gMap"), gMapOptions);
             
    if (gvoInitOption.enableEarthView != null)
        gvoEnableEarthView = gvoInitOption.enableEarthView;
//    if (gvoEnableEarthView == true)
//        gvoMap.addMapType(G_SATELLITE_3D_MAP);
    gvoaMapTypes = gvoMap.mapTypes;
    
    if (gvoInitOption.callByReload == true || (gvoaMarkers.length == 0 && gvoaLines.length == 0)) {
        gvnCurZoom = gvoInitOption.zoomLevel;
        gvnFitZoom = gvoInitOption.zoomLevel;
    } else {
        gvnCurZoom = gvoMap.getZoom();
        gvnFitZoom = gvnCurZoom;
    }
    
    gvoMap.setCenter(gvoCenterPoint);
    
    gvoMap.setZoom(gvnCurZoom);
    gvoCurMapBounds = gvoMap.getBounds();
    gvoCurrMapType = gvoMap.getMapTypeId();
    
    // Initialize the local searcher
    // create google search control
    //if (gvoInitOption.sBar == true) {
    //    // new Google Local Search Control
    //    var localSearchOptions = {
    //        onLocalSearchCompleteCallback : onLocalSearchSearchComplete,
    //        onGenerateMarkerHtmlCallback : onLocalSearchMarkerHtml
    //    };
    //    if (typeof(google) != 'undefined') {
    //        gvoLocalSearchCtrl = new google.maps.LocalSearch(localSearchOptions);
    //        //var localSearchCtrlPos = new GControlPosition(G_ANCHOR_BOTTOM_LEFT, new GSize(3, 35));
    //        //gvoMap.addControl(gvoLocalSearchCtrl, localSearchCtrlPos);
    //        gvoLocalSearchCtrl.focus();
    //    }
    //}
           
    initTypeIconMarker();
    drawLineMarkers();
    drawPointMarkers();
    
    if (window.attachEvent) { 
        window.attachEvent("onresize", function() { appZoomTo(); } ); 
    } else { 
        window.addEventListener("resize", function() { appZoomTo(); } , false); 
    } 
    google.maps.event.addListener(gvoMap, 'click', function (mouseEventObj) { 
        if (gvoInfowindow != null) {
            gvoInfowindow.close();
        }
    });
    google.maps.event.addListener(gvoMap, 'zoom_changed', function () { appZoomTo(); });
    google.maps.event.addListener(gvoMap, 'dragend', function () { appZoomTo(); });
    google.maps.event.addListener(gvoMap, 'mousemove', function (mouseEventObj) {
        if (gvoAddPOI != null && gvoAddPOI.mode == true)
            return;
        commSendCmd("mapMouseMove:"+mouseEventObj.latLng.lat()+":"+mouseEventObj.latLng.lng());
        if (gvoLocalSearchCtrl != null)
            gvoLocalSearchCtrl.focus();
    });
    google.maps.event.addListener(gvoMap, 'maptypeid_changed', function() {
        var currMapName = "OtherMap";
        switch (gvoMap.getMapTypeId()) {
            case google.maps.MapTypeId.ROADMAP:
                currMapName = "NormalMap";
                break;
            case google.maps.MapTypeId.SATELLITE:
                currMapName = "SatelliteMap";
                break;
            case google.maps.MapTypeId.HYBRID:
                currMapName = "HybridMap";
                break;
            case google.maps.MapTypeId.TERRAIN:
                currMapName = "PhysicalMap";
                break;
            default:
                break;
        }
        commSendCmd("mapTypeChanged:"+currMapName);
        gvoCurrMapType = gvoMap.getMapTypeId();
    });
    
    // for initial status
    if (gvoaMapTypes.length > 0) {
        if (gvsCurMapType)
            gvoMap.setMapType(findMapType(gvsCurMapType));
        else
            gvoMap.setMapType(findMapTypeByID(gvoInitOption.mapType));
    }
    
    if (gvnCurPOIID > 0)
        onSelectPOI(gvnPoiType, gvnCurPOIID);
            
    if (gvoInitOption.fitToTrack == true) {
        onFitLine('gvnLineType', null);
    }
        
    SetRefreshTimer();
    commSendCmd('onInitGMap');
}

function getPhotoNum()
{
    var nPhotoNum = 0;
    if (gvoaMarkers != null) {
        for (var i = 0; i< gvoaMarkers.length; i++) {
            var poPoi = gvoaMarkers[i];
            if (poPoi != null && poPoi.photos != null)
                nPhotoNum += poPoi.photos.length;
        }
    }
    
    return nPhotoNum;
}

///////////////////////////////////////////////////////////////////////////////
/// Functions for map drawing
///////////////////////////////////////////////////////////////////////////////
function createIcon(poIconOpt)
{       
    var icon = new google.maps.MarkerImage();
    if (gvoIconImageURLPath != null) {
        icon.url = gvoIconImageURLPath + poIconOpt.fileName;
    } else {
        icon.url = "http://maps.google.com/mapfiles/kml/pal5/icon13.png";
    }
    icon.size = new google.maps.Size(poIconOpt.width, poIconOpt.height);
    icon.anchor = new google.maps.Point(poIconOpt.anchorX, poIconOpt.anchorY);
    //icon.infoWindowAnchor = new GPoint(poIconOpt.width/2, poIconOpt.height/2);
    return icon;
}

function createLineMarker(poLine) {
    var markerOptions = { position: new google.maps.LatLng(poLine.startLat, poLine.startLon), title: poLine.name, icon: gvoLineIcon };
    var marker = new google.maps.Marker(markerOptions);
    
    var infowindowOptions = {content: infoLine(poLine), pixelOffset: new google.maps.Size(0, gvoLineIcon.size.height/2)};
    var infowindow = new google.maps.InfoWindow(infowindowOptions);
    marker.infowindow = infowindow;
    google.maps.event.addListener(infowindow, "closeclick", function() {
        gvoInfowindow = null;
    });
    google.maps.event.addListener(infowindow, 'domready', function() {
		var lat = poLine.startLat;
		var lng = poLine.startLon;

        var nZoomLevel = gvoMap.getZoom()+3;
        if (nZoomLevel > 18)
            nZoomLevel = gvoMap.getZoom()-3;
        var minimapDiv = document.getElementById("minimap");
        var gMapOptions = {
            zoom: nZoomLevel,
            center: marker.getPosition(),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var minimap = new google.maps.Map(minimapDiv, gMapOptions);
        
        var miniMapMarkerOptions = { position: new google.maps.LatLng(lat, lng), title: poLine.name, icon: gvoLineIcon };
        var miniMapMarker = new google.maps.Marker(miniMapMarkerOptions);
        miniMapMarker.setMap(minimap);
    });
    
    google.maps.event.addListener(marker, "click", function() {
        if (gvoInfowindow != null)
            gvoInfowindow.close();
        
        infowindow.open(gvoMap, marker);
        gvoInfowindow = infowindow;
    });
    poLine.startMarker = marker;
    
    // assign line location marker
    // -- gvoTypeIconMarkerAry
    // -- gvoTypeIconAry
    if (gvoInitOption.trackTypeMappingAry != null) {
        var i = 0;
        for (i = 0; i < gvoInitOption.trackTypeMappingAry.length; i++) {
            if (poLine.name == gvoInitOption.trackTypeMappingAry[i].trackName) {
                poLine.locationMarker = gvoTypeIconMarkerAry[gvoInitOption.trackTypeMappingAry[i].type];
                break;
            }
        }                     
    }
    return marker;
}

function drawLineMarkers() {
    if (gvoMap == null)
        return;
        
    if (gvoaLines.length > 0) {
        for (var i=0; i<gvoaLines.length; i++) {
            var lineMarker = createLineMarker(gvoaLines[i]);
            lineMarker.setMap(gvoMap);

            var linePath = new google.maps.MVCArray();
            if (gvoaLines[i].pathAry != null) {
                for (var wpIdx=0; wpIdx < gvoaLines[i].pathAry.length; wpIdx++) {
                    var wp = new google.maps.LatLng(gvoaLines[i].pathAry[wpIdx][0], gvoaLines[i].pathAry[wpIdx][1]);
                    linePath.push(wp);
                }
            }

            var polyline;
            if (gvoaLines[i].width > 0)
                polyline = new google.maps.Polyline({path: linePath, strokeColor: gvoaLines[i].color, strokeWeight: gvoaLines[i].width, strokeOpacity:0.7});
            else
                polyline = new google.maps.Polyline({path: linePath, strokeColor: colors[i%10], strokeWeight: 5, strokeOpacity:0.7});
        
            gvoaLines[i].marker = polyline;
            polyline.setMap(gvoMap);
            
            if (gApJsCtrl == false) // export html
                gTrackListCmbBox.insertNewTrack(gvoaLines[i]);
        }
        if (gApJsCtrl == false) {
            gTrackListCmbBox.selectCurrentTrack();
        }
    }
}

function onClickMarker(marker, poPoi) {
    if (gvoMap == null)
        return;
        
    var bDestMarker = false;
    if (marker.getIcon() == gvoUserDestIcon)
        bDestMarker = true;
        
    if (gvoLocateMarker == null) { 
        var markerOptions = { position: marker.getPosition(), icon: gvoLocateIcon, clickable: false };
        gvoLocateMarker = new google.maps.Marker(markerOptions); 
        gvoLocateMarker.setMap(gvoMap);
    } else {
        gvoLocateMarker.setPosition(marker.getPosition());
    }
        
    //marker.openInfoWindowTabsHtml(infoMarker(poPoi, bDestMarker));
    //bindMiniMap(marker);
    gvbBullonOnfocus = true;
    myLytebox.updateLyteboxItems();
    if (gvnCurPOIID != poPoi.id) {
        gvnCurPOIID = poPoi.id;
        if (gvbAppSelectFlag == false) { 
            commSendCmd('onSelectPOI:'+gvnPoiType+':'+poPoi.id); 
        } else { 
            gvbAppSelectFlag = false; 
        }
    }
}

function createMarker(poPos, poPoi, icon) {
    if (gvoMap == null)
        return;
        
    if (icon == null && poPoi.icon != null) {
        if (gvoaIcons[poPoi.icon] == null) {
            // create icon
            icon = new google.maps.MarkerImage();
            if (gvoIconImageURLPath != null) {
                icon.url = gvoIconImageURLPath + poPoi.icon;
            } else {
                icon.url = "http://maps.google.com/mapfiles/kml/pal5/icon14.png";
            }
            icon.size = new google.maps.Size(32, 32);
            icon.anchor = new google.maps.Point(16, 16);
            //icon.infoWindowAnchor = new GPoint(16, 16);
                
            gvoaIcons[poPoi.icon] = icon;
        } else {
            icon = gvoaIcons[poPoi.icon];
        }
    }
    var markerOptions = { position: poPos, title: poPoi.name, icon: icon };
    var marker = new google.maps.Marker(markerOptions);
    poPoi.marker = marker;

//     if (gvoLocateMarker == null) { 
//         gvoLocateMarker = new GMarker(marker.getPoint(), gvoLocateIcon); 
//         gvoMap.addOverlay(gvoLocateMarker); 
//     }
    
    var bDestMarker = false;
    if (marker.getIcon() == gvoUserDestIcon)
        bDestMarker = true;
        
    var infowindowOptions = {content: infoMarker(poPoi, bDestMarker), pixelOffset: new google.maps.Size(0, icon.size.height/2)};
    var infowindow = new google.maps.InfoWindow(infowindowOptions);
    marker.infowindow = infowindow;
    google.maps.event.addListener(infowindow, "closeclick", function() {
        gvoInfowindow = null;
    });
    
    //marker.bindInfoWindowTabsHtml(infoMarker(poPoi, bDestMarker));
    //marker.bindInfoWindowHtml(infoMarker(poPoi, bDestMarker));
    //myLytebox.updateLyteboxItems(); 
    
    google.maps.event.addListener(marker, "click", function() {
        onClickMarker(marker, poPoi);
        //bindMiniMap(marker);
        
        if (gvoInfowindow != null)
            gvoInfowindow.close();
        
        infowindow.open(gvoMap, marker);
        gvoInfowindow = infowindow;
    });
  
//     google.maps.event.addListener(marker, "dblclick", function() {
//         var point = marker.getPosition();
//         
//         if (gvoLocateMarker == null) {
//             var markerOptions = { position: marker.getPosition(), icon: gvoLocateIcon, clickable: false }; 
//             gvoLocateMarker = new google.maps.Marker(markerOptions);
//             gvoLocateMarker.setMap(gvoMap);
//         } else {
//             gvoLocateMarker.setPosition(point);
//         }
// 
//         if (wndPanCheck(point.lat(), point.lng()) == true) gvoMap.panTo(point); 
//     });
        
    return marker;
}

function drawPointMarkers() {
    if (gvoMap == null)
        return;
        
    if (gvoaMarkers.length > 0) {
        for (var i=0; i<gvoaMarkers.length; i++) {
            var icon = null;
            if (gvoaMarkers[i].isdest == true)
                icon = gvoUserDestIcon;
            var lat = gvoaMarkers[i].lat;
            var lng = gvoaMarkers[i].lon;

            var marker = createMarker(new google.maps.LatLng(lat, lng), gvoaMarkers[i], icon);
            marker.setMap(gvoMap);
        }
    }
}

function bindMiniMap(marker) {
    var nZoomLevel = gvoMap.getZoom()+3;
    if (nZoomLevel > 18)
        nZoomLevel = gvoMap.getZoom()-3;
        
    var minimapDiv = document.getElementById("minimap");
    var gMapOptions = {
      zoom: nZoomLevel,
      center: marker.getPosition(),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    var minimap = new google.maps.Map(minimapDiv, gMapOptions);
//    var CopyrightDiv = minimapDiv.firstChild.nextSibling;
//     var CopyrightImg = minimapDiv.firstChild.nextSibling.nextSibling;
//  	CopyrightDiv.style.display = "none"; 
//  	CopyrightImg.style.display = "none";	
 
    var markerOptions = { position: marker.getPosition(), title: marker.getTitle(), icon: marker.getIcon() };
    var miniMapMarker = new google.maps.Marker(markerOptions);
    miniMapMarker.setMap(minimap);
    
    return minimap;
}

function infoSearchResultMarker(poSearchResult) {
     var info = '<div class="pmInfo" style="width: 230px; height: 270px; overflow: hidden;">';
   
     if (poSearchResult != null) {
         if (poSearchResult.titleNoFormatting  != null) {
            info += '<b>'+poSearchResult.titleNoFormatting+'</b><br />';
            var strDescHtmlFormat = '';
            if (poSearchResult.streetAddress != null) {
                strDescHtmlFormat += poSearchResult.streetAddress+'<br />'; 
            }
            if (poSearchResult.city != null && poSearchResult.city != "") {
                strDescHtmlFormat += poSearchResult.city+' '; 
            }
            if (poSearchResult.region != null && poSearchResult.region != "") { 
                strDescHtmlFormat += poSearchResult.region+'<br />'; 
            }
            if (poSearchResult.country != null && poSearchResult.country != "") { 
                strDescHtmlFormat += poSearchResult.country+'<br />'; 
            }
            if (poSearchResult.phoneNumbers != null && poSearchResult.phoneNumbers[0] !=null) {
                strDescHtmlFormat += poSearchResult.phoneNumbers[0].number+'<br />'; 
            }
            
            var lat = poSearchResult.lat;
            var lng = poSearchResult.lng;
            
            if (gvoInitOption.poiCmd.funcEdit == true)
                info += '<a href="javascript:OnClick=appAddSearchResultAsPOI(\''+poSearchResult.titleNoFormatting+'\',\''+lat+'\',\''+lng+'\', false,\''+strDescHtmlFormat+'\')">'+strTBar_AddPlaceMark_Tip+'</a>';        
            if (gvoInitOption.poiCmd.funcSaveAsTarget == true)
                info += ' - <a href="javascript:OnClick=appAddSearchResultAsPOI(\''+poSearchResult.titleNoFormatting+'\',\''+lat+'\',\''+lng+'\', true,\''+strDescHtmlFormat+'\')">'+strInfoWin_SaveAsTarget_Cmd+'</a>';

            info +='<br /><br /><div class="poiFiles">';
            info += strDescHtmlFormat;
       
            info = info+'</div>';
            info += '<br /><div id="minimap" style="width: 200px; height: 150px; overflow: hidden;"></div>';
         }
     } 
   
     info += '</div>'; 
     
     return info; 
}

function onLocalSearchMarkerHtml(marker, html, result) {
    var info = '<div class="pmInfo" style="width: 230px; height: 270px; overflow: hidden; ">';
   
    if (result != null) {
         if (result.titleNoFormatting  != null) {
            info += '<b>'+result.titleNoFormatting+'</b><br />';
            var strDescHtmlFormat = '';
            if (result.streetAddress != null) {
                strDescHtmlFormat += result.streetAddress+'<br />'; 
            }
            if (result.city != null && result.city != "") {
                strDescHtmlFormat += result.city+' '; 
            }
            if (result.region != null && result.region != "") { 
                strDescHtmlFormat += result.region+'<br />'; 
            }
            if (result.country != null && result.country != "") { 
                strDescHtmlFormat += result.country+'<br />'; 
            }
            if (result.phoneNumbers != null && result.phoneNumbers[0] !=null) {
                strDescHtmlFormat += result.phoneNumbers[0].number+'<br />'; 
            }
            
            var lat = result.lat;
            var lng = result.lng;
                  
            if (gvoInitOption.poiCmd.funcEdit == true)
                info += '<a href="javascript:OnClick=appAddSearchResultAsPOI(\''+result.titleNoFormatting+'\',\''+lat+'\',\''+lng+'\', false,\''+strDescHtmlFormat+'\')">'+strTBar_AddPlaceMark_Tip+'</a>';        
            
            if (gCanAddDestination == true)
                info += ' - <a href="javascript:OnClick=commSendCmd(\'UserAddDest:'+lat+':'+lng+':'+strDescHtmlFormat+'\')">'+strTBar_AddDestination_Tip+'</a>';
            
            if (gvoInitOption.poiCmd.funcSaveAsTarget == true)
                info += ' - <a href="javascript:OnClick=appAddSearchResultAsPOI(\''+result.titleNoFormatting+'\',\''+lat+'\',\''+lng+'\', true,\''+strDescHtmlFormat+'\')">'+strInfoWin_SaveAsTarget_Cmd+'</a>';

            info +='<br /><br /><div class="poiFiles">';
            info += strDescHtmlFormat;
       
            info = info+'</div>';
            info += '<br /><div id="minimap" style="width: 200px; height: 150px; overflow: hidden; "></div>';
         }
     } 
   
     info += '</div>'; 
     html.innerHTML = info;
          
//     GEvent.addListener(marker, "infowindowopen", function() {
//        bindMiniMap(marker);
//     });    
         
     return html; 
}

function onLocalSearchSearchComplete(searcher) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false || !searcher.results || searcher.results[0]==null)
        return;
    
    gvoMap.setCenter(new google.maps.LatLng(parseFloat(searcher.results[0].lat), parseFloat(searcher.results[0].lng)));
    gvoMap.setZoom(14);
}

///////////////////////////////////////////////////////////////////////////////
/// Functions for string procedure
///////////////////////////////////////////////////////////////////////////////
function jstringToHtml(jstring) {
    // remove new line from the end of string!
    while(jstring.charAt(jstring.length-1) == '\n' || jstring.charAt(jstring.length-1) == '\r')
    {  
        jstring = jstring.substring(0,jstring.length-1);
    }
    jstring = jstring.replace(/</g, '&lt;');
    jstring = jstring.replace(/>/g, '&gt;');
    jstring = jstring.replace(/\n/g,'<br />');
    return jstring;
}

///////////////////////////////////////////////////////////////////////////////
/// Functions for focus on
///////////////////////////////////////////////////////////////////////////////

function onLocalSearch() {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    if (!gvoLocalSearch.results || gvoLocalSearch.results[0]==null) {
        alert(strMsgCannotFindResult);
        return;
    }
        
    gvoMap.setCenter(new google.maps.LatLng(parseFloat(gvoLocalSearch.results[0].lat), parseFloat(gvoLocalSearch.results[0].lng)));
    gvoMap.setZoom(14);
    
    // create arrow location icon marker
    var markerOptions = { 
        position: new google.maps.LatLng(parseFloat(gvoLocalSearch.results[0].lat), parseFloat(gvoLocalSearch.results[0].lng)), 
        title: gvoLocalSearch.results[0].titleNoFormatting, 
        icon: gvoSearchIcon 
    };
    var locationMarker = new google.maps.Marker(markerOptions);
    locationMarker.setMap(gvoMap);
    
    var infowindowOptions = {
        content: infoSearchResultMarker(gvoLocalSearch.results[0]), 
        pixelOffset: new google.maps.Size(0, gvoSearchIcon.size.height/2)
    };
    var infowindow = new google.maps.InfoWindow(infowindowOptions);
    google.maps.event.addListener(infowindow, "closeclick", function() {
        gvoInfowindow = null;
    });
    google.maps.event.addListener(infowindow, 'domready', function() {
        bindMiniMap(locationMarker);
    });
        
    if (gvoInfowindow != null)
        gvoInfowindow.close();
    infowindow.open(gvoMap, locationMarker);
    gvoInfowindow = infowindow;
    
    google.maps.event.addListener(locationMarker, "click", function() {
        if (gvoInfowindow != null)
            gvoInfowindow.close();
        
        infowindow.open(gvoMap, locationMarker);
        gvoInfowindow = infowindow;
    });
    
    locationMarker.result = gvoLocalSearch.results[0];
}

function onSearchForm(searchForm) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return false;
    
    gvoLocalSearch.execute(searchForm.input.value);
    return false;
}

function onAddDest(pjsonPOI) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var poi = eval('('+pjsonPOI+')');
    
    var lat = poi.lat;
    var lng = poi.lon;

            
    var marker = createMarker(new google.maps.LatLng(lat, lng), poi, gvoUserDestIcon);
    marker.setMap(gvoMap);
    gvoaMarkers.push(poi);
}

function onSelectLine(pnLineTyoe, pnLineID) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;

    var line = findLine(pnLineID);
  
    if (line != null) {
        var point = new google.maps.LatLng(line.startLat, line.startLon); 
        gvoMap.panTo(point);
        
        if (gApJsCtrl == false) // export html
            gTrackListCmbBox.updateCurrentSelection(gvoaLines[i]);
    }
}

function onToggleTrackDisplay(sToggleTrackDisplayAryJson) {
    //alert(sToggleTrackDisplayAryJson);
    var _toggleTrackDisplayAry = eval('('+sToggleTrackDisplayAryJson+')');
    
    for (var i = 0; i < _toggleTrackDisplayAry.length; i++) {
        var line = findLine(_toggleTrackDisplayAry[i].id);
        if (line != null) {
            if (_toggleTrackDisplayAry[i].check == "false")
                line.marker.setVisible(false);
            else
                line.marker.setVisible(true);
        }
    }
}

function onFitLine(pnLineTyoe, pnLineID) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;

    var line = findLine(pnLineID);
  
    if (line != null) {
        var lineBound = new google.maps.LatLngBounds(new google.maps.LatLng(line.minLat,line.minLon), new google.maps.LatLng(line.maxLat,line.maxLon));
        gvoCenterPoint = new google.maps.LatLng((line.minLat+line.maxLat)/2, (line.minLon+line.maxLon)/2);
        gvoMap.fitBounds(lineBound);
        gvnCurZoom = gvoMap.getZoom();
        gvoMap.setCenter(gvoCenterPoint);
        gvoCurMapBounds = gvoMap.getBounds();
    } else { // fit all tracks
        if (gvoaLines && gvoaLines.length > 0) {
            var lineBound = null;
            for (var i=0; i<gvoaLines.length; i++) {
                line = gvoaLines[i];
                if (line.minLat <= -1000 || line.minLon <= -1000 || line.maxLat <= -1000 || line.maxLon <= -1000)
                    continue;
                    
                if (i == 0) {
                    lineBound = new google.maps.LatLngBounds(new google.maps.LatLng(line.minLat,line.minLon), new google.maps.LatLng(line.maxLat,line.maxLon));
                } else {
                    lineBound.extend(new google.maps.LatLng(line.minLat,line.minLon));
                    lineBound.extend(new google.maps.LatLng(line.maxLat,line.maxLon));
                }
            }
            gvoMap.fitBounds(lineBound);
            gvnCurZoom = gvoMap.getZoom();
            gvoMap.setCenter(gvoCenterPoint);
            gvoCurMapBounds = gvoMap.getBounds();
        }
    }
    
    var newCP = gvoMap.getCenter();
    var mZoom = gvoMap.getZoom(); 
    commSendCmd("wndZoomTo:"+newCP.lat()+":"+newCP.lng()+":"+mZoom);
}

function onUpdateMarker(psMarkerJson) {
    if (gvoMap == null || gvbMapInit == false || gvoEnableGraphMarkers == false)
        return;
        
    var markerInfo = eval('('+psMarkerJson+')');
    var marker1Pos = new google.maps.LatLng(markerInfo.Marker1Lat, markerInfo.Marker1Lng);
    var marker2Pos = new google.maps.LatLng(markerInfo.Marker2Lat, markerInfo.Marker2Lng);

    if (gvoGraphMarker1 == null) { 
        var markerOptions = { position: marker1Pos, title: markerInfo.Marker1, icon: gvoGraphMarkerIcon1 };
        gvoGraphMarker1 = new google.maps.Marker(markerOptions); 
        gvoGraphMarker1.setMap(gvoMap); 
    } else {
        var lastPos = gvoGraphMarker1.getPosition();
        gvoGraphMarker1.setPosition(marker1Pos);
        if ((lastPos.lat() != marker1Pos.lat() || lastPos.lng() != marker1Pos.lng()) &&
            wndPanCheck(marker1Pos.lat(), marker1Pos.lng()) == true) {
            gvoMap.panTo(marker1Pos); 
        }
    }
    if (gvoGraphMarker2 == null) {
        var markerOptions = { position: marker2Pos, title: markerInfo.Marker2, icon: gvoGraphMarkerIcon2 }; 
        gvoGraphMarker2 = new google.maps.Marker(markerOptions); 
        gvoGraphMarker2.setMap(gvoMap); 
    }   else {
        var lastPos = gvoGraphMarker2.getPosition();
        gvoGraphMarker2.setPosition(marker2Pos);
        if ((lastPos.lat() != marker2Pos.lat() || lastPos.lng() != marker2Pos.lng()) &&
            wndPanCheck(marker2Pos.lat(), marker2Pos.lng()) == true) {
            gvoMap.panTo(marker2Pos); 
        }
    }
}

function onEditLine(psLineJson) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var newLine = eval('('+psLineJson+')');
    var pnID = newLine.id;
    
    if (pnID != null) {
        var lineAInd = findLineIndex(pnID);
        if (lineAInd != -1) {
            // remove overlap
			gvoaLines[lineAInd].startMarker.setMap(null);
            gvoaLines[lineAInd].startMarker = null;
            
			gvoaLines[lineAInd].marker.setMap(null);
            gvoaLines[lineAInd].marker = null;
            
            // reset to new!
            gvoaLines[lineAInd] = newLine;
            
            // new start marker
            var sMarker = createLineMarker(gvoaLines[lineAInd]);
            sMarker.setMap(gvoMap);
            
            // new line marker
            var linePath = new google.maps.MVCArray();
            if (gvoaLines[lineAInd].pathAry != null) {
                for (var wpIdx=0; wpIdx < gvoaLines[lineAInd].pathAry.length; wpIdx++) {
                    var wp = new google.maps.LatLng(gvoaLines[lineAInd].pathAry[wpIdx][0], gvoaLines[lineAInd].pathAry[wpIdx][1]);
                    linePath.push(wp);
                }
            }

            var polyline;
            if (gvoaLines[lineAInd].width > 0)
                polyline = new google.maps.Polyline({path: linePath, strokeColor: gvoaLines[lineAInd].color, strokeWeight: gvoaLines[lineAInd].width, strokeOpacity:0.7});
            else
                polyline = new google.maps.Polyline({path: linePath, strokeColor: colors[lineAInd%10], strokeWeight: 5, strokeOpacity:0.7});
            polyline.setMap(gvoMap);     
            gvoaLines[lineAInd].startMarker = sMarker;
            gvoaLines[lineAInd].marker = polyline;
        }
    }
}

function onDelLine(psLineID) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var pnLineID = Number(psLineID);
    removeLine(pnLineID);
}

function onAddLine(psLineJson) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var objLine = eval('('+psLineJson+')');
    objLine.startMarker = createLineMarker(objLine);
    objLine.startMarker.setMap(gvoMap);
    
    var linePath = new google.maps.MVCArray();
    if (objLine.pathAry != null) {
        for (var wpIdx=0; wpIdx < objLine.pathAry.length; wpIdx++) {
            var wp = new google.maps.LatLng(objLine.pathAry[wpIdx][0], objLine.pathAry[wpIdx][1]);
            linePath.push(wp);
        }
    }

    if (objLine.width > 0)
        objLine.marker = new google.maps.Polyline({path: linePath, strokeColor: objLine.color, strokeWeight: objLine.width, strokeOpacity:0.7});
    else
        objLine.marker = new google.maps.Polyline({path: linePath, strokeColor: colors[gvoaLines.length%10], strokeWeight: 5, strokeOpacity:0.7});
    objLine.marker.setMap(gvoMap); 
    gvoaLines.push(objLine);
}

function onReplaceAllLines(psLinesJson) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    if (gvoaLines && gvoaLines.length > 0) {
        for (var i=0; i<gvoaLines.length; i++) {
            if (gvoaLines[i].marker) {
                gvoaLines[i].startMarker.setMap(null);
                gvoaLines[i].marker.setMap(null);
                gvoaLines[i].marker = null;
            }
        }
    }
    gvoaLines = eval('('+psLinesJson+')');
    drawLineMarkers();
}

function onSelectPOI(pnType, pnID) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;

    gvbAppSelectFlag = true;
    var poi = findPOI(pnID);
  
    if (poi != null && poi.marker != null){ 
        if (gvoLocateMarker == null) { 
            var markerOptions = { position: poi.marker.getPosition(), icon: gvoLocateIcon, clickable: false };
            gvoLocateMarker = new google.maps.Marker(markerOptions); 
            gvoLocateMarker.setMap(gvoMap);
        } else {
            gvoLocateMarker.setPosition(poi.marker.getPosition());
        }
    
        //google.maps.event.trigger(poi.marker, "dblclick"); 
        if (gvbBullonOnfocus == true) {
        	google.maps.event.trigger(poi.marker, "click");
        }
    }
}

function onBindMiniMap(pnType, pnID) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    var poi = findPOI(pnID);
    if (poi != null && poi.marker != null){ 
        if (gvbBullonOnfocus == true) {
            google.maps.event.trigger(poi.marker, "click");
        }
    }
}

function OnUpdatePoiInfoWindow(pnType, pnID) {
    if (gvoMap == null)
        return;
        
    if (gvnCurPOIID != pnID)
        return;
 
    var poi = findPOI(pnID);
    var _bullOnFocus = gvbBullonOnfocus;
    if (poi != null && poi.marker != null) {
        //if (_bullOnFocus == true) {
        //    poi.marker.closeInfoWindow();
        //    poi.marker.bindInfoWindow(null));
        //}
        
        //if (_bullOnFocus != true) {
        //    poi.marker.bindInfoWindow(infoMarker(poi));
       // }
        
        //google.maps.event.trigger(poi.marker, "dblclick");
        if (_bullOnFocus == true) {
           google.maps.event.trigger(poi.marker, "click");             
        }
        
        // restore status
        gvnCurPOIID = pnID;
        gvbBullonOnfocus = _bullOnFocus;
    }
}

function onAddPOI(pjsonPOI) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var poi = eval('('+pjsonPOI+')');
    var lat = poi.lat;
    var lng = poi.lon;

    var marker = createMarker(new google.maps.LatLng(lat, lng), poi, null);
    marker.setMap(gvoMap);
    gvoaMarkers.push(poi);
}

function onEditPOI(psPoiJSON) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var focusPOIID = gvnCurPOIID;
    var focusOn = gvbBullonOnfocus;
    var newPOI = eval('('+psPoiJSON+')');
    var pnID = newPOI.id;
    
    if (pnID != null) {
		var poiIndex = findPOIIndex(pnID);
        if (poiIndex != -1) {
            var icon = null; 
            // remove overlap
            if (gvoaMarkers[poiIndex].marker) {
                icon = gvoaMarkers[poiIndex].marker.getIcon();
                gvoaMarkers[poiIndex].marker.setMap(null);
                gvoaMarkers[poiIndex].marker = null;
            }
        
            gvoaMarkers[poiIndex] = newPOI;
            gvoaMarkers[poiIndex].marker = createMarker(new google.maps.LatLng(newPOI.lat, newPOI.lon), gvoaMarkers[poiIndex], icon);
            gvoaMarkers[poiIndex].marker.setMap(gvoMap);
            
			if (focusPOIID == pnID && focusOn == true) {
				google.maps.event.trigger(gvoaMarkers[poiIndex].marker, "click");
            }
        }
    }
}

function onDelPOI(psID) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var pnPOIID = Number(psID);
    removePOI(pnPOIID);
}

function onReplaceAllPOIs(psPOIsJson) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    if (gvoaMarkers && gvoaMarkers.length > 0) {
        for (var i=0; i<gvoaMarkers.length; i++) {
            if (gvoaMarkers[i].marker) {
                gvoaMarkers[i].marker.setMap(null);
                gvoaMarkers[i].marker = null;
            }
        }
    }
    
    gvoaMarkers = eval('('+psPOIsJson+')');
    drawPointMarkers();
}

function onPosition(psLat, psLng) { 
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var latLng = new google.maps.LatLng(Number(psLat), Number(psLng));
    if (gvoLocateMarker == null) {
        var markerOptions = { position: latLng, icon: gvoLocateIcon, clickable: false };
        gvoLocateMarker = new google.maps.Marker(markerOptions); 
        gvoLocateMarker.setMap(gvoMap);
    } else {
        gvoLocateMarker.setPosition(latLng);
    }
         
    if (wndPanCheck(latLng.lat(), latLng.lng()) == true) 
        gvoMap.panTo(latLng); 
}

function onTracker(psLat, psLng, nMarkerNo) { 
    if (gvoMap == null || gvbMapInit == false || gvoTrackerMarkerAry == null) return;
    
    if (nMarkerNo == -1) { // hide last tracker marker
        gvoLastVisibleTrackMarker.setVisible(false);
        gvoLastVisibleTrackMarker = null;
    }
    
    if (gvoTrackerMarkerAry != null) { 
        if (gvoLastVisibleTrackMarker != null)
            gvoLastVisibleTrackMarker.hide();
       
        gvoLastVisibleTrackMarker = gvoTrackerMarkerAry[nMarkerNo];
        var point = new google.maps.LatLng(Number(psLat), Number(psLng));     
        gvoLastVisibleTrackMarker.setPosition(point);
        gvoLastVisibleTrackMarker.setVisible(true);
        if (wndPanCheck(point.lat(), point.lng()) == true) 
            gvoMap.panTo(point); 
        if (gvoMap.getZoom() < 12)
            gvoMap.setZoom(12);
    }
}

function onUpdateTrackerMarker(psTrackerMarkerJson) {
    if (gvoMap == null || gvbMapInit == false)
        return;
        
    gvoTrackerMarkerAry = [];
    var trackerMarkerAry = eval('('+psTrackerMarkerJson+')');
    for (var i=0; i < trackerMarkerAry.length; i++) {
        var info = trackerMarkerAry[i];
        // create icon
        var icon = new google.maps.MarkerImage();
        icon.url = info.path + info.fileName;
        icon.size = new google.maps.Size(info.width, info.height);
        icon.anchor = new google.maps.Point(info.anchorX, info.anchorY);
        //icon.infoWindowAnchor = new GPoint(info.width/2, info.height/2);
        
        // create marker
        var markerOption = { position: new google.maps.LatLng(0, 0), icon: icon, map: gvoMap, visible: false };
        gvoTrackerMarkerAry[i] = new google.maps.Marker(markerOption);
    }    
}

// function onTip(psLat, psLon, psMsg) {
//     if (gvbMapInit == false) return;
//     
//     if (gvoLocateLabel != null) {
//         gvoMap.removeTLabel(gvoLocateLabel);
//     }
//   
//     gvoLocateLabel = new TLabel();
//     gvoLocateLabel.id = 'l01';
//     gvoLocateLabel.anchorPoint = 'bottomLeft';
//     gvoLocateLabel.percentOpacity = 85;
//     gvoLocateLabel.anchorLatLng = new GLatLng (Number(psLat), Number(psLon));
//     gvoLocateLabel.markerOffset = new GSize (-3,0);
//     gvoLocateLabel.content = '<div class="posTip">'; 
//     gvoLocateLabel.content += psMsg;
//     gvoLocateLabel.content += '</div>';
//     gvoMap.addTLabel(gvoLocateLabel);
// }

function onPhotoSlideShow(psPhotos) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var photos = eval('('+psPhotos+')');
    if (photos && photos.length > 0)
    {
        myLytebox.userResetImage(); 
        for (var i=0; i<photos.length; i++) {
            myLytebox.userAppendImage(photos[i], true);
        }
        myLytebox.userStart(true);    
    }
}

function onPhotoShow(psPhoto, psPhotoTitle) {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    if (psPhoto) {
        myLytebox.userResetImage();
        myLytebox.userAppendPhoto(psPhoto, psPhotoTitle, false);
        myLytebox.userStart(false);
    }
}

function onPhotoClose() {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    myLytebox.end();
}

function showPoiInfo(PoiId, bDestMarker) {
    if (gvoMap == null)
        return;
        
    var poPoi = findPOI(PoiId);
    if (poPoi != null && poPoi.name != null) {
        var info = infoMarker(poPoi, bDestMarker);
        var infowindowOptions = {content: info, pixelOffset: new google.maps.Size(0, poPoi.marker.getIcon().size.height/2)};
        var infowindow = new google.maps.InfoWindow(infowindowOptions);
        poPoi.marker.infowindow = infowindow;
        google.maps.event.addListener(infowindow, "closeclick", function() {
            gvoInfowindow = null;
        });
        
        if (gvoInfowindow != null)
            gvoInfowindow.close();
        infowindow.open(gvoMap, poPoi.marker);
        gvoInfowindow = infowindow;
        
        myLytebox.updateLyteboxItems(); 
        gvbBullonOnfocus = true;
    } 
}

function showPoiLocation(PoiId, bDestMarker) {
    if (gvoMap == null)
        return;
        
    var poPoi = findPOI(PoiId);
    
    var location = '<div class="pmInfo">';

    if (poPoi != null && poPoi.name != null) {
        location += '<b>'+jstringToHtml(poPoi.name)+'</b>';
        location +=' - <a href="javascript:OnClick=showPoiInfo('+poPoi.id+','+bDestMarker+')">'+strInfoWin_BackToInfoCmd+'</a>';

        location += '<br /><br /><center><div id="minimap" style="width: 200px; height: 180px"></div></center></div>';
        
        var infowindowOptions = {content: location, pixelOffset: new google.maps.Size(0, poPoi.marker.getIcon().size.height/2)};
        var infowindow = new google.maps.InfoWindow(infowindowOptions);
        
        google.maps.event.addListener(infowindow, "closeclick", function() {
            gvoInfowindow = null;
        });
        google.maps.event.addListener(infowindow, 'domready', function() {
            bindMiniMap(poPoi.marker);
        });
        
        if (gvoInfowindow != null)
            gvoInfowindow.close();
        infowindow.open(gvoMap, poPoi.marker);
        gvoInfowindow = infowindow;
        
        gvbBullonOnfocus = true;
    } 
}

function infoMarker(poPoi, bDestMarker) {
    var info = '<div class="pmInfo" style="overflow:auto;">'; // MARY
    //var location = '<div class="pmInfo">';

    if (poPoi != null) {
        if (poPoi.name != null) { 
            info += '<b>'+jstringToHtml(poPoi.name)+'</b>';
            //location += '<b>'+jstringToHtml(poPoi.name)+'</b>';
      
            info+=' - <a href="javascript:OnClick=showPoiLocation('+poPoi.id+','+bDestMarker+')">'+strInfoWIn_ShowLocationCmd+'</a>';
            
            if (gvoInitOption.poiCmd.funcEdit == true) {
                if (bDestMarker != null && bDestMarker == true && gCanAddDestination == true) {
                    info+=' - <a href="javascript:OnClick=appEditDest('+poPoi.id+')">';
                    info+=strInfoWin_Edit_Cmd;
                    info+= '</a>';
                } else {
                    //info+=' - <a href="javascript:OnClick=appEditPOI('+poPoi.id+')">Edit</a>';
                    info+=' - <a href="javascript:OnClick=appEditPOI('+poPoi.id+')">';
                    info+=strInfoWin_Edit_Cmd;
                    info+= '</a>';
                }
            }
            
            if (gvoInitOption.poiCmd.funcSaveAsTarget == true) {
                //info+=' - <a href="javascript:OnClick=appPOISaveAsTarget('+poPoi.id+')">Save as target</a>';
                info+=' - <a href="javascript:OnClick=appPOISaveAsTarget('+poPoi.id+')">';
                info+=strInfoWin_SaveAsTarget_Cmd;
                info+='</a>';
            }
            
            info+='<br /><div class="poiFiles">';
            // time
            
            if (poPoi.memo != null) { 
                //info=info+jstringToHtml(poPoi.memo); 
                info=info+poPoi.memo; 
            }
          
            // photos
            for (var i=0; i<poPoi.photos.length; i++) {
                info=info+'<br /><a href="javascript:OnClick=onLyteBoxShow('+poPoi.id+','+i+')" title="'+poPoi.photos[i].title+'" ><img src="'+poPoi.photos[i].thumb+'" border="0" /></a><br />'+jstringToHtml(poPoi.photos[i].title)+'<br />';
            }
          
            info = info+'</div>'; 
        }
    } 
    info += '</div>';
     
   // location += '<br /><br /><center><div id="minimap" style="width: 200px; height: 180px"></div></center></div>';
    
    //var infoTab = new GInfoWindowTab("Info", info);
	//var miniMapTab = new GInfoWindowTab("Location", location);
	//var infoTabs = [infoTab, miniMapTab];
    //return infoTabs; 
    return info;
}

function infoLine(poLine) {
    var info = '<div class="lineInfo">';
  
    if (poLine != null) {
        if (poLine.name != null) { 
        info +='<b>'+jstringToHtml(poLine.name)+'</b> <a href="javascript:OnClick=onFitLine('+gvnLineType+', '+poLine.id+')"> - ';
        info +=strInfoWin_LineFit_Cmd;
        info +=' </a> <br />';
        //Mary
        //info +='Start point: ' + poLine.startLat + ',' + poLine.startLon + '<br />';
        //info=info+'Start time: ' + poLine.startLat + ',' + poLine.startLon + '<br />';
        info +='Blansko-Klepacov-Bukovina-Jedovnice <br />';
        info +='Total Distance:' + poLine.distance + 'km <br />';
        //info +='<div id="minimap" style="width: 180px; height: 150px;"></div>';
        }
    }
  
    info += '</div>'; 
    return info; 
}

function infoPosition(pdLat, pdLng) {
    var info = '<div class="pmLocate"> (lat:'+pdLat+', lng:'+pdLng+') </div>';
    return info; 
}


///////////////////////////////////////////////////////////////////////////////
/// Functions for finding objects
///////////////////////////////////////////////////////////////////////////////
function findPOI(pnPoiID) {
    if (gvoaMarkers && gvoaMarkers.length > 0) {
        for (var i=0; i<gvoaMarkers.length; i++) {
            if (gvoaMarkers[i].id == pnPoiID)
                return gvoaMarkers[i];
        }
    } 
    return null;
}

function findPOIIndex(pnPoiID) {
    if (gvoaMarkers && gvoaMarkers.length > 0) {
        for (var i=0; i<gvoaMarkers.length; i++) {
            if (gvoaMarkers[i].id == pnPoiID)
                return i;
        }
    } 
    return -1;
}

function removePOI(pnPoiID) {
    if (gvoaMarkers && gvoaMarkers.length > 0) {
		var nID = -1;
        for (var i=0; i<gvoaMarkers.length; i++) {
            if (gvoaMarkers[i].id == pnPoiID)
				nID = i;
        }
        
        if (nID > -1) {
			if (gvoaMarkers[nID].marker) {
			    gvoaMarkers[nID].marker.setMap(null);
				gvoaMarkers[nID].marker = null;
			}
			gvoaMarkers.splice(nID, 1);
			
			// clear location marker
			if (gvoLocateMarker != null) {
			    gvoLocateMarker.setMap(null);
			    gvoLocateMarker = null;
			}
        }
    } 
}

function findLine(pnLineID) {
    if (gvoaLines && gvoaLines.length > 0) {
        for (var i=0; i<gvoaLines.length; i++) {
            if (gvoaLines[i].id == pnLineID)
                return gvoaLines[i];
        }
    } 
  
    return null;
}

function findLineIndex(pnLineID) {
    if (gvoaLines && gvoaLines.length > 0) {
        for (var i=0; i<gvoaLines.length; i++) {
            if (gvoaLines[i].id == pnLineID)
                return i;
        }
    } 
    return -1;
}

function removeLine(pnLineID) {
    if (gvoaLines && gvoaLines.length > 0) {
		var nID = -1;
        for (var i=0; i<gvoaLines.length; i++) {
            if (gvoaLines[i].id == pnLineID)
				nID = i;
        }
        if (nID > -1) {
			if (gvoaLines[nID].marker) {
				gvoaLines[nID].startMarker.setMap(null);
				gvoaLines[nID].marker.setMap(null);
				gvoaLines[nID].marker = null;
			}
			gvoaLines.splice(nID, 1);
        }
    } 
}

function findMapTypeIndex(psTypeName) {
    if (gvbMapInit == false) return 0;

    var i=0;
  
    for (i=0; i<gvoaMapTypes.length; i++) {
        if (psTypeName == gvoaMapTypes[i].getName())
            return i;
    }
  
    return 0;
}

function findMapType(psTypeName) {
   if (gvbMapInit == false) return 0;

    var i=0;
  
    for (i=0; i<gvoaMapTypes.length; i++) {
        if (psTypeName == gvoaMapTypes[i].getName())
            return gvoaMapTypes[i];
    }
  
    return 0;
}

function findMapTypeByID(pnID) {
    if (gvbMapInit == false) return 0;
    if (pnID < gvoaMapTypes.length)
        return gvoaMapTypes[pnID];
    else
        return 0;
}

///////////////////////////////////////////////////////////////////////////////
/// Functions for pan, zoom of windows
///////////////////////////////////////////////////////////////////////////////
function wndPanCheck(pdLat, pdLng) { 
    if (gvbMapInit == false) return false;
    
    if (gvoCurMapBounds == null) return false; 
    var dislat = (gvoCurMapBounds.getNorthEast().lat() - gvoCurMapBounds.getSouthWest().lat())/10*4; 
    var dislng = (gvoCurMapBounds.getNorthEast().lng() - gvoCurMapBounds.getSouthWest().lng())/10*4; 
    var lolat = gvoCurMapBounds.getCenter().lat() - dislat; 
    var hilat = gvoCurMapBounds.getCenter().lat() + dislat; 
    var lolng = gvoCurMapBounds.getCenter().lng() - dislng; 
    var hilng = gvoCurMapBounds.getCenter().lng() + dislng; 
  
    if (pdLat < lolat || pdLat > hilat || pdLng < lolng || pdLng > hilng) 
        return true; 
    else
        return false;  
}

function wndZoomTo(psLat, psLng, psAppZoom) {
    if (gvoMap == null)
        return;
    
    if (gvbMapInit == false) return;
    
    var lat = Number(psLat);
    var lng = Number(psLng);
    var mZoom = Number(psAppZoom);
  
    if (mZoom < 0) {
        mZoom = 0; 
    } else if (mZoom > 18) { 
        mZoom = 18; 
    }
  
    if (gvoCenterPoint.lat() != lat || gvoCenterPoint.lng() != lng || gvnCurZoom != mZoom) {
        gvnCurZoom = mZoom;
        gvoCenterPoint = new google.maps.LatLng(lat, lng);
        gvoMap.setCenter(gvoCenterPoint);
        gvoMap.setZoom(gvnCurZoom);
        gvoCurMapBounds = gvoMap.getBounds();
    }
}

///////////////////////////////////////////////////////////////////////////////
/// functions for window size
///////////////////////////////////////////////////////////////////////////////
function wndGetHeight() {
    if (self.innerHeight)
        return self.innerHeight;
    
    if (document.documentElement && document.documentElement.clientHeight)
        return y = document.documentElement.clientHeight;
    
    if (document.body)
        return document.body.clientHeight;
    
    return 0;
}

function wndGetWidth() {
    if (self.innerWidth)
        return self.innerWidth;
    
    if (document.documentElement && document.documentElement.clientWidth)
        return y = document.documentElement.clientWidth;
    
    if (document.body)
        return document.body.clientWidth;
    
    return 0;
}

function wndResize() {
    var height = wndGetHeight() - 30;
    var width = wndGetWidth() - 20;
  
    document.getElementById('gMap').style.height = height + 'px';
    document.getElementById('gMap').style.width = width + 'px';
}

///////////////////////////////////////////////////////////////////////////////
/// functions for actions
///////////////////////////////////////////////////////////////////////////////
function actSlideShow() { 
    if (gvbMapInit == false) return;
    
    var photoNo = 0; 
    myLytebox.userResetImage(); 
    for (var i=0; i<gvoaMarkers.length; i++) { 
        if (gvoaMarkers[i].photos.length) { 
            photoNo = photoNo + gvoaMarkers[i].photos.length; 
            myLytebox.userAppendImage(gvoaMarkers[i].photos, true); 
        } 
    } 
  
    if (photoNo) 
        myLytebox.userStart(true);  
}

function appAddSearchResultAsPOI(name, lat, lng, bSaveAsTarget, description) {
    if (name == null || name =='')
        return;
       
    var strSaveAsTarget = (bSaveAsTarget == true)? 'true' : 'false'; 
    if (description != null && description != '') {
        commSendCmd("UserAddPOI:"+lat+":"+lng+":"+name+":"+strSaveAsTarget+":"+description);
    } else {
        commSendCmd("UserAddPOI:"+lat+":"+lng+":"+name+":"+strSaveAsTarget);
    }
}

function appReload() {
    if (gvoMap == null) {
        commSendCmd("ReloadGoogleMapPage");
        return;
    }
        
    if (gvbMapInit == false) return;
    
    var newCP = gvoMap.getCenter();
    var mZoom = gvoMap.getZoom();
    var mType = gvoMap.getMapTypeId();
  
    commSendCmd("RefreshStatus:"+findMapTypeIndex(mType)+":"+mZoom+":"+newCP.lat()+":"+newCP.lng()+":"+gvnCurPOIID+":"+gvbBullonOnfocus);
}

function appReloadData() {
    if (gvoMap == null || gvbMapInit == false) {
        return;
    }
    
    // reset all data
    //gvoMap.clearOverlays();
    if (gvoaMarkers) {
        for (var i = 0; i < gvoaMarkers.length; i++ ) {
            gvoaMarkers[i].marker.setMap(null);
        }
    }
    if (gvoaLines) {
        for (var i = 0; i < gvoaLines.length; i++ ) {
            gvoaLines[i].startMarker.setMap(null);
            gvoaLines[i].marker.setMap(null);
        }
    }
    if (gvoLocateMarker)
        gvoLocateMarker.setMap(null);
    if (gvoGraphMarker1)
        gvoGraphMarker1.setMap(null);
    if (gvoGraphMarker2)
        gvoGraphMarker2.setMap(null);
    if (gvoInfowindow)
        gvoInfowindow.close();

    gvoLocateIcon = null;
    gvoLocateMarker = null;
    gvnCurPOIID = 0;
    gvnCurLineID = 0;
    gvoaMarkers = [];
    gvoaLines = [];
    gvoaIcons = [];
    gvoGraphMarker1 = null;
    gvoGraphMarker2 = null;
    gvoInfowindow = null;
    
    commSendCmd("GenerateData");
}

////////////////////////////////////////////////////////////////////////////////
/// function for screen capture
////////////////////////////////////////////////////////////////////////////////
function appEnableScreenCapture(strEnableJSon) {
    if (gvoMap == null || gvbMapInit == false) {
        return;
    }
    
    var bEnable = eval('('+strEnableJSon+')');
    gvoEnableScreenCapture = bEnable;
    
    var voEditButtonDiv = document.getElementById('buttonwrapper');
    if (voEditButtonDiv == null) {
        appCreateScreenCaptureButton();
    }
    
    if (bEnable == false) {
        document.getElementById('buttonwrapper').style.visibility = 'hidden';
    } else {
        document.getElementById('buttonwrapper').style.visibility = 'visible';
    }
}

function appCreateScreenCaptureButton() {
    
    var strCmdString = strInfoWin_ScreenCapture;  //string in multilanguage
    var voDivEditButton = document.createElement('div');
    voDivEditButton.setAttribute('id', 'ScreenCapture_buttonwrapper');
    voDivEditButton.innerHTML = "<a class='squarebutton' href='javascript:OnClick=appScreenCapture()' title='"+ strCmdString +"'><span>" + strCmdString + "</span></a>";
    document.body.appendChild(voDivEditButton);  

}
////////////////////////////////////////////////////////////////////////////////

//function appFitAllObject() {
//    if (gvoaLines.length <= 0 && gvoaMarkers.length <= 0)
//        return;
//
//    var areaBound = null;
//    
//    for (var i = 0; i < gvoaMarkers.length; i++) {
//        var poi = gvoaMarkers[i];
//        if (areaBound == null) {
//            areaBound = new GLatLngBounds(poi.marker.getPoint(), poi.marker.getPoint());
//        } else {
//            areaBound.extend(poi.marker.getPoint());
//        }  
//    }
//     if (gvoaLines.length == 1) {
//         var line = gvoaLines[0];
//         onFitLine(gvnLineType, line.id);
//     } else {
//         for (var i = 0; i < gvoaLines.length; i++) {
//             var line = gvoaLines[i];
//             if (areaBound == null) {
//                 areaBound = line.marker.getBounds();
//             } else {
//                 areaBound.containsBounds(line.marker.getBounds());
//             }
//         }
//         
//         if (areaBound) {
//             gvoCenterPoint = areaBound.getCenter();
//             gvnCurZoom = gvoMap.getBoundsZoomLevel(areaBound);
//             gvoMap.setCenter(gvoCenterPoint, gvnCurZoom);
//             gvoCurMapBounds = gvoMap.getBounds();
//         }
//     }
// }

function appGenerateData(psLinesJson, psPOIsJson, psIconPosOptJson) {
    gvoaLines = eval('('+psLinesJson+')');
    gvoaMarkers = eval('('+psPOIsJson+')');
    var _iconPosOpt = eval('('+psIconPosOptJson+')');
    gvoInitOption.iconPosOpt = _iconPosOpt;
    gvoLocateIcon = createIcon(_iconPosOpt);

    drawLineMarkers();
    drawPointMarkers();
    commSendCmd('onAfterInitGData');
    //appFitAllObject();
}

function appSelectLine(pnLineID) {
    if (gvbMapInit == false) return;
    
    commSendCmd("LineSelect:"+pnLineID);
}

function appEditPOI(pnPoiID) {
    if (gvbMapInit == false) return;
    
    commSendCmd("POIProperyEdit:"+pnPoiID);
}

function appEditDest(pnPoiID) {
    if (gvbMapInit == false) return;
    
    commSendCmd("DestProperyEdit:"+pnPoiID);
}

function appPOISaveAsTarget(pnPoiID) {
    if (gvbMapInit == false) return;
    
    commSendCmd("POISaveAsTarget:"+pnPoiID);
}

function onLyteBoxShow(pnPoiID, photoAryIdx) {
    if (gvbMapInit == false) return;
    
    var poi = findPOI(pnPoiID);
    if (poi != null) {
        onPhotoShow(poi.photos[photoAryIdx].link, poi.photos[photoAryIdx].title);
    }
}

function appZoomTo() {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    var newCP = gvoMap.getCenter();
    var mZoom = gvoMap.getZoom();
  
    if (gvoCenterPoint.lat() != newCP.lat() || gvoCenterPoint.lng() != newCP.lng() || gvnCurZoom != mZoom) {
        gvoCenterPoint = newCP;
        gvnCurZoom = mZoom;
        gvoCurMapBounds = gvoMap.getBounds();
            
        // tell application
        commSendCmd("wndZoomTo:"+newCP.lat()+":"+newCP.lng()+":"+gvnCurZoom);
    }
}

///////////////////////////////////////////////////////////////////////////////
/// Functions for add poi
///////////////////////////////////////////////////////////////////////////////
function userPOI() {
    if (gvbMapInit == false) return;

    if (gvoAddPOI.mode == true)
        normalMode();
    else
        addPOIMode();
}

function addPOIMode() {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    gvoAddPOI.mode = true;
    var markerOptions = { position: new google.maps.LatLng(0, 0), icon: gvoUserPOIIcon, draggable: true };
    gvoAddPOI.marker = new google.maps.Marker(markerOptions);
    gvoAddPOI.moveHDL = google.maps.event.addListener(gvoMap, 'mousemove', userPOIMove);
    gvoAddPOI.clickHDL = google.maps.event.addListener(gvoAddPOI.marker, 'click', userPOIClick);
    gvoAddPOI.marker.setMap(gvoMap);
    gvoMap.setOptions({draggable: false});
    //document.getElementById("gMap").style.cursor = "default"; 
}

function userDest() {
    if (gvbMapInit == false) return;

    if (gvoAddPOI.mode == true)
        normalMode();
    else
        addDestMode();
}

function addDestMode() {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    gvoAddPOI.mode = true;
    var markerOptions = { position: new google.maps.LatLng(0, 0), icon: gvoUserDestIcon, draggable: true };
    gvoAddPOI.marker = new google.maps.Marker(markerOptions);
    gvoAddPOI.moveHDL = google.maps.event.addListener(gvoMap, 'mousemove', userPOIMove);
    gvoAddPOI.clickHDL = google.maps.event.addListener(gvoAddPOI.marker, 'click', userDestClick);
    gvoAddPOI.marker.setMap(gvoMap);
    gvoMap.setOptions({draggable: false});
    //document.getElementById("gMap").style.cursor = "default";    
}

function normalMode() {
    if (gvoMap == null)
        return;
        
    if (gvbMapInit == false) return;
    
    google.maps.event.removeListener(gvoAddPOI.moveHDL);
    google.maps.event.removeListener(gvoAddPOI.clickHDL);
    gvoAddPOI.marker.setMap(null);
    gvoMap.setOptions({draggable: true});
    gvoAddPOI.mode = false;
    gvoAddPOI.marker = null;
    gvoAddPOI.moveHDL = null;
    gvoAddPOI.clickHDL = null;
}

function userPOIMove(mouseEvent) {
    if (gvbMapInit == false) return;
    
    if (gvoAddPOI.mode == true) {
        gvoAddPOI.marker.setPosition(mouseEvent.latLng);
    }
}

function userPOIClick(mouseEvent) {
    if (gvbMapInit == false) return;
    
    // to resolve the problem that can not add POI on track or Placemark
    pt = gvoAddPOI.marker.getPosition();
    
    if (gvoAddPOI.mode == true && pt != null) {
        var lat = pt.lat();
        var lng = pt.lng();
        commSendCmd("UserAddPOI:"+lat+":"+lng);
        normalMode();
    }
}

function userDestClick(mouseEvent) {
    if (gvbMapInit == false) return;
    
    // to resolve the problem that can not add POI on track or Placemark
    pt = gvoAddPOI.marker.getPosition();
    
    if (gvoAddPOI.mode == true && pt != null) {
        var lat = pt.lat();
        var lng = pt.lng();

        commSendCmd("UserAddDest:"+lat+":"+lng);
        normalMode();
    }
}

function initLogoDisplay(logoFileName) {
    if (logoFileName != null) {
        gDisplayLogo = true;
        gDisplayLogoFileName = logoFileName;
    }
}

function enableDestination() {
    gCanAddDestination = true;
}

function enableEarthView() {
    gvoEnableEarthView = true;
}

function appScreenCapture() {
    if (gvbMapInit == false) return;
    
    commSendCmd("ScreenCapture");
}

///////////////////////////////////////////////////////////////////////////////
/// functions for communication with application
///////////////////////////////////////////////////////////////////////////////
function commSendCmd(psMessage) {
    if (gApJsCtrl == true) {
        window.status = "cmd:"+psMessage;
        window.location = "cmd:"+psMessage;
    }
}
</script>
<!-- END HERE -->
<script type="text/javascript">
//<![CDATA[
var gvoaMarkers = [
{'id':1,'lat':49.346874,'lon':16.650841,'name':'Lat:49.346874, Lon:16.650841, Ele:268.515625', 'UTC':[2015,5,25,14,15,22],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':1,'thumb':'map.files/t1.jpg','link':'map.files/p1.jpg','title':''}],'vedios':[]},
{'id':2,'lat':49.346561,'lon':16.650919,'name':'Lat:49.346561, Lon:16.650919, Ele:270.117188', 'UTC':[2015,5,25,14,16,19],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':2,'thumb':'map.files/t2.jpg','link':'map.files/p2.jpg','title':''}],'vedios':[]},
{'id':3,'lat':49.346878,'lon':16.651213,'name':'Lat:49.346878, Lon:16.651213, Ele:275.296875', 'UTC':[2015,5,25,14,17,23],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':3,'thumb':'map.files/t3.jpg','link':'map.files/p3.jpg','title':''}],'vedios':[]},
{'id':4,'lat':49.347198,'lon':16.651546,'name':'Lat:49.347198, Lon:16.651546, Ele:273.218750', 'UTC':[2015,5,25,14,19,35],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':4,'thumb':'map.files/t4.jpg','link':'map.files/p4.jpg','title':''}],'vedios':[]},
{'id':5,'lat':49.344810,'lon':16.658491,'name':'Lat:49.344810, Lon:16.658491, Ele:363.875000', 'UTC':[2015,5,25,14,26,52],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':5,'thumb':'map.files/t5.jpg','link':'map.files/p5.jpg','title':''}],'vedios':[]},
{'id':6,'lat':49.344982,'lon':16.658175,'name':'Lat:49.344982, Lon:16.658175, Ele:353.820313', 'UTC':[2015,5,25,14,28,38],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':6,'thumb':'map.files/t6.jpg','link':'map.files/p6.jpg','title':''}],'vedios':[]},
{'id':7,'lat':49.343441,'lon':16.659932,'name':'Lat:49.343483, Lon:16.659922, Ele:374.117188', 'UTC':[2015,5,25,14,30,19],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':7,'thumb':'map.files/t7.jpg','link':'map.files/p7.jpg','title':''},{'id':8,'thumb':'map.files/t8.jpg','link':'map.files/p8.jpg','title':''}],'vedios':[]},
{'id':8,'lat':49.341961,'lon':16.664591,'name':'Lat:49.341961, Lon:16.664591, Ele:383.195313', 'UTC':[2015,5,25,14,34,44],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':9,'thumb':'map.files/t9.jpg','link':'map.files/p9.jpg','title':''},{'id':10,'thumb':'map.files/t10.jpg','link':'map.files/p10.jpg','title':''}],'vedios':[]},
{'id':9,'lat':49.342121,'lon':16.665714,'name':'Lat:49.342121, Lon:16.665714, Ele:387.023438', 'UTC':[2015,5,25,14,36,40],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':12,'thumb':'map.files/t12.jpg','link':'map.files/p12.jpg','title':''},{'id':11,'thumb':'map.files/t11.jpg','link':'map.files/p11.jpg','title':''}],'vedios':[]},
{'id':10,'lat':49.342728,'lon':16.669197,'name':'Lat:49.342728, Lon:16.669197, Ele:388.992188', 'UTC':[2015,5,25,14,39,36],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':13,'thumb':'map.files/t13.jpg','link':'map.files/p13.jpg','title':''},{'id':14,'thumb':'map.files/t14.jpg','link':'map.files/p14.jpg','title':''}],'vedios':[]},
{'id':11,'lat':49.343022,'lon':16.670611,'name':'Lat:49.343079, Lon:16.670469, Ele:384.632813', 'UTC':[2015,5,25,14,41,4],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':15,'thumb':'map.files/t15.jpg','link':'map.files/p15.jpg','title':''},{'id':16,'thumb':'map.files/t16.jpg','link':'map.files/p16.jpg','title':''}],'vedios':[]},
{'id':12,'lat':49.347439,'lon':16.681944,'name':'Lat:49.347439, Lon:16.681944, Ele:392.562500', 'UTC':[2015,5,25,14,47,5],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':18,'thumb':'map.files/t18.jpg','link':'map.files/p18.jpg','title':''},{'id':17,'thumb':'map.files/t17.jpg','link':'map.files/p17.jpg','title':''}],'vedios':[]},
{'id':13,'lat':49.344952,'lon':16.686466,'name':'Lat:49.344952, Lon:16.686466, Ele:450.421875', 'UTC':[2015,5,25,14,51,24],'memo':'Polom','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':19,'thumb':'map.files/t19.jpg','link':'map.files/p19.jpg','title':''}],'vedios':[]},
{'id':61,'lat':49.343594,'lon':16.686474,'name':'Lat:49.343594, Lon:16.686474, Ele:450.521875', 'UTC':[2015,5,25,14,53,36],'memo':'Polom','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':20,'thumb':'map.files/t20.jpg','link':'map.files/p20.jpg','title':''}],'vedios':[]},
{'id':14,'lat':49.339294,'lon':16.687483,'name':'Lat:49.339294, Lon:16.687483, Ele:498.554688', 'UTC':[2015,5,25,15,1,57],'memo':'Křivá borovice','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':21,'thumb':'map.files/t21.jpg','link':'map.files/p21.jpg','title':''}],'vedios':[]},
{'id':15,'lat':49.338760,'lon':16.687672,'name':'Lat:49.338760, Lon:16.687672, Ele:492.500000', 'UTC':[2015,5,25,15,3,18],'memo':'Křivá borovice','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':22,'thumb':'map.files/t22.jpg','link':'map.files/p22.jpg','title':''}],'vedios':[]},
{'id':16,'lat':49.330200,'lon':16.686686,'name':'Lat:49.330200, Lon:16.686686, Ele:439.070313', 'UTC':[2015,5,25,15,8,18],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':24,'thumb':'map.files/t24.jpg','link':'map.files/p24.jpg','title':''},{'id':23,'thumb':'map.files/t23.jpg','link':'map.files/p23.jpg','title':''}],'vedios':[]},
{'id':17,'lat':49.328987,'lon':16.688156,'name':'Lat:49.328987, Lon:16.688156, Ele:444.289063', 'UTC':[2015,5,25,15,10,26],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':25,'thumb':'map.files/t25.jpg','link':'map.files/p25.jpg','title':''},{'id':26,'thumb':'map.files/t26.jpg','link':'map.files/p26.jpg','title':''}],'vedios':[]},
{'id':18,'lat':49.334404,'lon':16.698772,'name':'Lat:49.334404, Lon:16.698772, Ele:471.312500', 'UTC':[2015,5,25,15,18,22],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':27,'thumb':'map.files/t27.jpg','link':'map.files/p27.jpg','title':''},{'id':28,'thumb':'map.files/t28.jpg','link':'map.files/p28.jpg','title':''}],'vedios':[]},
{'id':19,'lat':49.324085,'lon':16.720299,'name':'Lat:49.324085, Lon:16.720299, Ele:531.984375', 'UTC':[2015,5,25,15,26,50],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':29,'thumb':'map.files/t29.jpg','link':'map.files/p29.jpg','title':''},{'id':30,'thumb':'map.files/t30.jpg','link':'map.files/p30.jpg','title':''}],'vedios':[]},
{'id':20,'lat':49.322910,'lon':16.722061,'name':'Lat:49.322910, Lon:16.722061, Ele:541.781250', 'UTC':[2015,5,25,15,30,42],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':31,'thumb':'map.files/t31.jpg','link':'map.files/p31.jpg','title':''},{'id':32,'thumb':'map.files/t32.jpg','link':'map.files/p32.jpg','title':''}],'vedios':[]},
{'id':21,'lat':49.318287,'lon':16.725595,'name':'Lat:49.318287, Lon:16.725595, Ele:507.820313', 'UTC':[2015,5,25,15,35,40],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':33,'thumb':'map.files/t33.jpg','link':'map.files/p33.jpg','title':'T'},{'id':34,'thumb':'map.files/t34.jpg','link':'map.files/p34.jpg','title':'zprava'},{'id':35,'thumb':'map.files/t35.jpg','link':'map.files/p35.jpg','title':'zleva'},{'id':36,'thumb':'map.files/t36.jpg','link':'map.files/p36.jpg','title':'Z'}],'vedios':[]},
{'id':22,'lat':49.316063,'lon':16.724087,'name':'Lat:49.316063, Lon:16.724087, Ele:522.140625', 'UTC':[2015,5,25,15,40,42],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':37,'thumb':'map.files/t37.jpg','link':'map.files/p37.jpg','title':''},{'id':38,'thumb':'map.files/t38.jpg','link':'map.files/p38.jpg','title':''}],'vedios':[]},
{'id':23,'lat':49.305607,'lon':16.721014,'name':'Lat:49.305607, Lon:16.721014, Ele:446.382813', 'UTC':[2015,5,25,15,45,8],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':39,'thumb':'map.files/t39.jpg','link':'map.files/p39.jpg','title':''},{'id':40,'thumb':'map.files/t40.jpg','link':'map.files/p40.jpg','title':''}],'vedios':[]},
{'id':24,'lat':49.305363,'lon':16.721188,'name':'Lat:49.305363, Lon:16.721188, Ele:468.039063', 'UTC':[2015,5,25,15,46,8],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':41,'thumb':'map.files/t41.jpg','link':'map.files/p41.jpg','title':''}],'vedios':[]},
{'id':25,'lat':49.303593,'lon':16.723320,'name':'Lat:49.303593, Lon:16.723320, Ele:487.312500', 'UTC':[2015,5,25,15,48,18],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':42,'thumb':'map.files/t42.jpg','link':'map.files/p42.jpg','title':''},{'id':43,'thumb':'map.files/t43.jpg','link':'map.files/p43.jpg','title':''}],'vedios':[]},
{'id':60,'lat':49.296276,'lon':16.740267,'name':'Lat:49.296276, Lon:16.740267, Ele:399.343750', 'UTC':[2015,5,25,15,55,12],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':44,'thumb':'map.files/t44.jpg','link':'map.files/p44.jpg','title':''}],'vedios':[]},
{'id':26,'lat':49.295971,'lon':16.741018,'name':'Lat:49.295971, Lon:16.741018, Ele:399.343750', 'UTC':[2015,5,25,15,56,14],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':45,'thumb':'map.files/t45.jpg','link':'map.files/p45.jpg','title':''}],'vedios':[]},
{'id':28,'lat':49.296837,'lon':16.743605,'name':'Lat:49.296864, Lon:16.743521, Ele:403.609375', 'UTC':[2015,5,25,15,58,13],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':46,'thumb':'map.files/t46.jpg','link':'map.files/p46.jpg','title':''}],'vedios':[]},
{'id':29,'lat':49.296856,'lon':16.744289,'name':'Lat:49.296856, Lon:16.744289, Ele:407.960938', 'UTC':[2015,5,25,15,59,34],'memo':'chybi IS21b','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':47,'thumb':'map.files/t47.jpg','link':'map.files/p47.jpg','title':''}],'vedios':[]},
{'id':30,'lat':49.293702,'lon':16.748253,'name':'Lat:49.296856, Lon:16.744289, Ele:407.960938', 'UTC':[2015,5,25,15,59,34],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[],'vedios':[]},

{'id':32,'lat':49.293457,'lon':16.749821,'name':'Lat:49.293457, Lon:16.749821, Ele:431.914063', 'UTC':[2015,5,30,8,28,48],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':72,'thumb':'map.files/tt2.jpg','link':'map.files/pp2.jpg','title':''}],'vedios':[]},
{'id':33,'lat':49.293385,'lon':16.750021,'name':'Lat:49.293423, Lon:16.749983, Ele:432.320313', 'UTC':[2015,5,30,8,29,11],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':73,'thumb':'map.files/tt3.jpg','link':'map.files/pp3.jpg','title':''}],'vedios':[]},
{'id':34,'lat':49.290497,'lon':16.763559,'name':'Lat:49.290497, Lon:16.763559, Ele:438.406250', 'UTC':[2015,5,30,8,34,58],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':74,'thumb':'map.files/tt4.jpg','link':'map.files/pp4.jpg','title':''}],'vedios':[]},
{'id':35,'lat':49.289619,'lon':16.764153,'name':'Lat:49.289619, Lon:16.764153, Ele:449.054688', 'UTC':[2015,5,30,8,35,52],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':75,'thumb':'map.files/tt5.jpg','link':'map.files/pp5.jpg','title':''}],'vedios':[]},
{'id':36,'lat':49.296021,'lon':16.770273,'name':'Lat:49.296021, Lon:16.770273, Ele:493.664063', 'UTC':[2015,5,30,8,41,20],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':76,'thumb':'map.files/tt6.jpg','link':'map.files/pp6.jpg','title':''}],'vedios':[]},
{'id':37,'lat':49.296242,'lon':16.770090,'name':'Lat:49.296242, Lon:16.770090, Ele:493.398438', 'UTC':[2015,5,30,8,41,53],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':77,'thumb':'map.files/tt7.jpg','link':'map.files/pp7.jpg','title':''}],'vedios':[]},
{'id':38,'lat':49.297958,'lon':16.773483,'name':'Lat:49.297958, Lon:16.773483, Ele:508.367188', 'UTC':[2015,5,30,8,44,32],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':78,'thumb':'map.files/tt8.jpg','link':'map.files/pp8.jpg','title':''},{'id':79,'thumb':'map.files/tt9.jpg','link':'map.files/pp9.jpg','title':''},{'id':80,'thumb':'map.files/tt10.jpg','link':'map.files/pp10.jpg','title':''}],'vedios':[]},
{'id':39,'lat':49.297783,'lon':16.773275,'name':'Lat:49.297783, Lon:16.773275, Ele:504.554688', 'UTC':[2015,5,30,8,45,37],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':81,'thumb':'map.files/tt11.jpg','link':'map.files/pp11.jpg','title':''}],'vedios':[]},
{'id':40,'lat':49.298527,'lon':16.780714,'name':'Lat:49.298527, Lon:16.780714, Ele:494.945313', 'UTC':[2015,5,30,8,48,22],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':82,'thumb':'map.files/tt12.jpg','link':'map.files/pp12.jpg','title':''}],'vedios':[]},
{'id':41,'lat':49.298634,'lon':16.780834,'name':'Lat:49.298634, Lon:16.780834, Ele:493.000000', 'UTC':[2015,5,30,8,48,43],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':84,'thumb':'map.files/tt14.jpg','link':'map.files/pp14.jpg','title':''},{'id':83,'thumb':'map.files/tt13.jpg','link':'map.files/pp13.jpg','title':''}],'vedios':[]},
{'id':42,'lat':49.299694,'lon':16.783604,'name':'Lat:49.299694, Lon:16.783604, Ele:505.226563', 'UTC':[2015,5,30,8,53,52],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':85,'thumb':'map.files/tt15.jpg','link':'map.files/pp15.jpg','title':''}],'vedios':[]},
{'id':43,'lat':49.308212,'lon':16.778453,'name':'Lat:49.308205, Lon:16.778601, Ele:558.671875', 'UTC':[2015,5,30,9,12,12],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':86,'thumb':'map.files/tt16.jpg','link':'map.files/pp16.jpg','title':''},{'id':87,'thumb':'map.files/tt17.jpg','link':'map.files/pp17.jpg','title':''},{'id':88,'thumb':'map.files/tt18.jpg','link':'map.files/pp18.jpg','title':''},{'id':89,'thumb':'map.files/tt19.jpg','link':'map.files/pp19.jpg','title':''},{'id':90,'thumb':'map.files/tt20.jpg','link':'map.files/pp20.jpg','title':''}],'vedios':[]},
{'id':44,'lat':49.313392,'lon':16.772577,'name':'Lat:49.313370, Lon:16.772532, Ele:569.218750', 'UTC':[2015,5,30,9,24,7],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':92,'thumb':'map.files/tt22.jpg','link':'map.files/pp22.jpg','title':''},{'id':91,'thumb':'map.files/tt21.jpg','link':'map.files/pp21.jpg','title':''}],'vedios':[]},
{'id':45,'lat':49.315277,'lon':16.770529,'name':'Lat:49.315277, Lon:16.770529, Ele:572.406250', 'UTC':[2015,5,30,9,25,49],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':93,'thumb':'map.files/tt23.jpg','link':'map.files/pp23.jpg','title':''}],'vedios':[]},
{'id':46,'lat':49.315983,'lon':16.769938,'name':'Lat:49.315983, Lon:16.769938, Ele:563.828125', 'UTC':[2015,5,30,9,26,54],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':94,'thumb':'map.files/tt24.jpg','link':'map.files/pp24.jpg','title':''}],'vedios':[]},
{'id':47,'lat':49.316364,'lon':16.769657,'name':'Lat:49.316364, Lon:16.769657, Ele:558.906250', 'UTC':[2015,5,30,9,27,37],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':95,'thumb':'map.files/tt25.jpg','link':'map.files/pp25.jpg','title':''}],'vedios':[]},
{'id':48,'lat':49.319824,'lon':16.767105,'name':'Lat:49.319824, Lon:16.767105, Ele:561.968750', 'UTC':[2015,5,30,9,31,58],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':96,'thumb':'map.files/tt26.jpg','link':'map.files/pp26.jpg','title':''}],'vedios':[]},
{'id':49,'lat':49.329460,'lon':16.767416,'name':'Lat:49.329460, Lon:16.767416, Ele:505.898438', 'UTC':[2015,5,30,9,36,11],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':97,'thumb':'map.files/tt27.jpg','link':'map.files/pp27.jpg','title':''}],'vedios':[]},
{'id':50,'lat':49.329798,'lon':16.766610,'name':'Lat:49.329842, Lon:16.766705, Ele:499.812500', 'UTC':[2015,5,30,9,37,7],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':98,'thumb':'map.files/tt28.jpg','link':'map.files/pp28.jpg','title':''},{'id':99,'thumb':'map.files/tt29.jpg','link':'map.files/pp29.jpg','title':''}],'vedios':[]},
{'id':51,'lat':49.334389,'lon':16.760454,'name':'Lat:49.334389, Lon:16.760454, Ele:469.343750', 'UTC':[2015,5,30,9,39,56],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':100,'thumb':'map.files/tt30.jpg','link':'map.files/pp30.jpg','title':''},{'id':101,'thumb':'map.files/tt31.jpg','link':'map.files/pp31.jpg','title':''}],'vedios':[]},
{'id':52,'lat':49.340115,'lon':16.751785,'name':'Lat:49.340115, Lon:16.751785, Ele:472.234375', 'UTC':[2015,5,30,9,45,5],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':102,'thumb':'map.files/tt32.jpg','link':'map.files/pp32.jpg','title':''}],'vedios':[]},
{'id':53,'lat':49.341228,'lon':16.751394,'name':'Lat:49.341228, Lon:16.751394, Ele:483.656250', 'UTC':[2015,5,30,9,45,57],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':103,'thumb':'map.files/tt33.jpg','link':'map.files/pp33.jpg','title':''}],'vedios':[]},
{'id':54,'lat':49.341255,'lon':16.750467,'name':'Lat:49.341255, Lon:16.750467, Ele:485.468750', 'UTC':[2015,5,30,9,47,1],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':104,'thumb':'map.files/tt34.jpg','link':'map.files/pp34.jpg','title':''}],'vedios':[]},
{'id':55,'lat':49.341537,'lon':16.751696,'name':'Lat:49.341537, Lon:16.751696, Ele:478.843750', 'UTC':[2015,5,30,9,47,54],'memo':'','isdest':false,'icon':'push_to_log.png','lineid':0,'marker':null,'photos':[{'id':105,'thumb':'map.files/tt35.jpg','link':'map.files/pp35.jpg','title':''}],'vedios':[]}

];
var gvoaLines = [
{'id':1,'name':"Holux2015/05/25_15:11",'num':"",'pathAry':[[49.346577,16.650934],[49.346741,16.650789],[49.346851,16.650848],[49.346818,16.651043],[49.346882,16.651285],[49.347588,16.651876],[49.347729,16.652081],[49.347633,16.652140],[49.347347,16.652107],[49.347057,16.651991],[49.346840,16.652020],[49.346668,16.652197],[49.346638,16.652328],[49.347050,16.652332],[49.347630,16.652851],[49.347748,16.653259],[49.347717,16.653818],[49.347389,16.654358],[49.346958,16.654665],[49.346428,16.655300],[49.346191,16.655783],[49.345917,16.656578],[49.345623,16.657030],[49.345123,16.658119],[49.343784,16.659290],[49.343502,16.659653],[49.342625,16.662664],[49.341961,16.664597],[49.341949,16.664942],[49.342472,16.668268],[49.342903,16.670336],[49.343052,16.670536],[49.343735,16.672802],[49.344112,16.673693],[49.344128,16.673988],[49.344616,16.675222],[49.344704,16.675655],[49.344864,16.675806],[49.345158,16.675735],[49.345497,16.675741],[49.345940,16.676018],[49.346405,16.676468],[49.346714,16.677406],[49.347515,16.679113],[49.347698,16.680304],[49.347645,16.681339],[49.347115,16.682745],[49.346996,16.683809],[49.346931,16.683914],[49.346813,16.683958],[49.346340,16.683838],[49.346249,16.683876],[49.346012,16.684401],[49.345821,16.685120],[49.345654,16.685286],[49.345440,16.685801],[49.345242,16.685957],[49.344883,16.686460],[49.344421,16.686541],[49.344067,16.686520],[49.343685,16.686409],[49.343517,16.686567],[49.342365,16.686588],[49.342144,16.686649],[49.342045,16.686659],[49.341915,16.686842],[49.340794,16.687029],[49.340199,16.687284],[49.339027,16.687468],[49.338875,16.687643],[49.338493,16.687851],[49.337875,16.687548],[49.337440,16.687412],[49.337025,16.687569],[49.336594,16.687548],[49.336349,16.687605],[49.336113,16.687719],[49.335690,16.688086],[49.334633,16.689499],[49.334286,16.690063],[49.334171,16.690126],[49.333637,16.690002],[49.332054,16.689095],[49.331825,16.688803],[49.331432,16.687962],[49.330822,16.687622],[49.330242,16.686726],[49.329460,16.687370],[49.329102,16.687765],[49.328979,16.688002],[49.328976,16.688301],[49.329266,16.689659],[49.329258,16.690107],[49.329346,16.690418],[49.329601,16.690790],[49.329842,16.691328],[49.330528,16.692280],[49.331429,16.693361],[49.331692,16.693794],[49.332249,16.694386],[49.333019,16.694889],[49.333111,16.694874],[49.333626,16.695154],[49.334202,16.695625],[49.334366,16.696440],[49.334511,16.698555],[49.334476,16.698685],[49.334338,16.698793],[49.334274,16.699135],[49.333885,16.699856],[49.333672,16.700594],[49.333290,16.701002],[49.333038,16.701504],[49.332020,16.702759],[49.331474,16.704807],[49.330933,16.706064],[49.330242,16.707033],[49.329994,16.707277],[49.329571,16.708090],[49.328732,16.709095],[49.327805,16.710848],[49.327187,16.711615],[49.326767,16.712257],[49.326393,16.713234],[49.325592,16.714560],[49.325031,16.715672],[49.324848,16.716375],[49.324745,16.718325],[49.324139,16.719831],[49.324052,16.720533],[49.323666,16.721258],[49.323238,16.721710],[49.322933,16.721918],[49.322784,16.722099],[49.322582,16.722183],[49.322357,16.722416],[49.322002,16.723469],[49.321285,16.724342],[49.320038,16.725111],[49.319077,16.725271],[49.318920,16.725315],[49.318520,16.725595],[49.317997,16.725643],[49.317570,16.725168],[49.316788,16.724546],[49.316509,16.724251],[49.316170,16.724073],[49.316040,16.724073],[49.315804,16.723820],[49.315609,16.723724],[49.315147,16.723742],[49.314514,16.723965],[49.313889,16.723993],[49.311970,16.723814],[49.311802,16.723690],[49.311485,16.723188],[49.310658,16.722191],[49.310081,16.721317],[49.309982,16.721186],[49.309765,16.720989],[49.308414,16.720282],[49.307190,16.720032],[49.307026,16.720081],[49.306622,16.720333],[49.306019,16.720589],[49.305107,16.721409],[49.304306,16.722490],[49.303623,16.723211],[49.303516,16.723433],[49.303299,16.723526],[49.302334,16.724218],[49.301815,16.724459],[49.301392,16.724960],[49.300747,16.726887],[49.299450,16.730257],[49.298363,16.731598],[49.297424,16.733191],[49.296650,16.733774],[49.296310,16.734159],[49.296268,16.734426],[49.296360,16.734840],[49.296856,16.735636],[49.297302,16.736063],[49.297398,16.736261],[49.297390,16.736473],[49.297264,16.736591],[49.297127,16.736586],[49.296597,16.736317],[49.296101,16.736248],[49.295807,16.736483],[49.295620,16.736856],[49.295708,16.737513],[49.295990,16.738159],[49.296448,16.738873],[49.296539,16.739370],[49.296459,16.740110],[49.296276,16.740267],[49.296177,16.740244],[49.295979,16.740324],[49.295910,16.740465],[49.295952,16.740961],[49.295784,16.741703],[49.295773,16.742201],[49.295891,16.742638],[49.296150,16.743073],[49.296413,16.743338],[49.297079,16.743720],[49.296604,16.744707],
[49.295536,16.746414],[49.295086,16.747084],[49.294160,16.747951],[49.293302,16.748533],[49.293442,16.750893],[49.293373,16.751844],[49.293304,16.752108],[49.293076,16.752831],[49.292389,16.753866],[49.291946,16.754786],[49.291965,16.755678],[49.292305,16.756813],[49.292271,16.757351],[49.291962,16.758499],[49.291904,16.759058],[49.292295,16.761389],[49.292249,16.761923],[49.291874,16.762669],[49.291332,16.763048],[49.290741,16.763390],[49.290546,16.763441],[49.289665,16.764112],[49.289623,16.764425],[49.289745,16.764711],[49.290047,16.766014],[49.290638,16.767843],[49.290905,16.768579],[49.291050,16.768795],[49.291279,16.768888],[49.292049,16.768972],[49.292549,16.769094],[49.294174,16.770739],[49.294468,16.770744],[49.295624,16.770494],[49.296204,16.770206],[49.296772,16.771151],[49.297203,16.772614],[49.297626,16.773199],[49.297897,16.773424],[49.297924,16.773741],[49.297668,16.774645],[49.297604,16.775188],[49.298271,16.776314],[49.298470,16.776787],[49.298599,16.779444],[49.298549,16.780682],[49.298637,16.781593],[49.299049,16.783009],[49.299500,16.783627],[49.299720,16.783641],[49.299820,16.783344],[49.299942,16.782490],[49.300556,16.781757],[49.300812,16.781225],[49.301033,16.781168],[49.301380,16.781340],[49.301731,16.781677],[49.301823,16.781700],[49.301918,16.781610],[49.301907,16.781441],[49.301620,16.780731],[49.301624,16.780426],[49.301865,16.779968],[49.302277,16.779472],[49.302502,16.778923],[49.302780,16.778448],[49.303040,16.778225],[49.303947,16.777962],[49.304428,16.777487],[49.304909,16.777163],[49.305187,16.777067],[49.305664,16.776758],[49.305771,16.776760],[49.306557,16.777603],[49.308331,16.778584],[49.308441,16.778601],[49.309143,16.778370],[49.309414,16.778202],[49.309723,16.777859],[49.311417,16.775410],[49.312756,16.773626],[49.313351,16.772530],[49.314121,16.771486],[49.314720,16.770985],[49.315006,16.770838],[49.315426,16.770464],[49.315994,16.770090],[49.316078,16.769909],[49.316338,16.769676],[49.316566,16.769562],[49.317745,16.768547],[49.319363,16.767279],[49.319733,16.767120],[49.319824,16.767069],[49.320122,16.767071],[49.320412,16.766941],[49.322281,16.766678],[49.324543,16.766184],[49.325245,16.766243],[49.326233,16.766647],[49.326885,16.766838],[49.327293,16.767040],[49.328289,16.767763],[49.328499,16.767851],[49.328682,16.767872],[49.328850,16.767811],[49.329529,16.767319],[49.329769,16.767040],[49.330818,16.763313],[49.331688,16.761934],[49.332405,16.761074],[49.332687,16.760830],[49.333988,16.760590],[49.334442,16.760422],[49.334515,16.760338],[49.334839,16.759714],[49.335209,16.758612],[49.335716,16.757788],[49.335907,16.757360],[49.336113,16.756750],[49.336212,16.755411],[49.336918,16.753727],[49.337135,16.753658],[49.337845,16.753704],[49.338520,16.753637],[49.338696,16.753450],[49.339069,16.752697],[49.339668,16.752050],[49.340271,16.751791],[49.340714,16.751465],[49.341175,16.751400]],
'color':"#5500ff",'width':5,'distance':23,'minLat':49.214005,'minLon':16.632408,'maxLat':49.347752,'maxLon':16.805672,'startLat':49.283454,'startLon':16.649709,'marker':null,'startMarker':null}];
gvoInitOption =  { "callByReload" : false , "iconLineOpt" :  { "anchorX" : 12 , "anchorY" : 28 , "fileName" : "line_flag.png" , "height" : 32 , "relPath" : "web/js/imgctrl/images/" , "width" : 32 }  , "iconMinimapPoiOpt" :  { "anchorX" : 8 , "anchorY" : 8 , "fileName" : "line_start.png" , "height" : 16 , "relPath" : "web/js/imgctrl/images/" , "width" : 16 }  , "iconPosOpt" :  { "anchorX" : 24 , "anchorY" : 25 , "fileName" : "locate.png" , "height" : 32 , "relPath" : "web/js/imgctrl/images/" , "width" : 32 }  , "mapBigControl" : true , "mapOverview" : true , "mapType" : 0 , "maxLat" : 49.3478 , "maxLon" : 16.8057 , "minLat" : 49.214 , "minLon" : 16.6324 , "poiCmd" :  { "funcEdit" : false , "funcSaveAsTarget" : false }  , "sBar" : false , "startLat" : 49.2809 , "startLon" : 16.719 , "tBar" :  { "funcAddPOI" : false , "funcReload" : false , "funcSlideShow" : true }  , "zoomLevel" : 12 } ;
gvsProductPath = 'map.files/';
gvnPoiType = 9;
gvnLineType = 11;
gApJsCtrl = false;
window.onload = mapMain;
//]]>
</script>
</head>
<body>
<script type="text/javascript">
//<![CDATA[
initLayout();
//]]>
</script>
<p>If you see this message when blocked by viewing active content(Google Map), please click "Allow Blocked Content" to show the active content(Google Map).</p><p>Or change your Internet Explorer options:</p><ol><li>In Internet Explorer, go to <strong>Tools &gt; Internet Options</strong>.</li><li>Select the <strong>Advanced </strong>tab.</li><li>Go to the <strong>Security </strong>section.</li><li>Select the <strong>Allow active content from CDs to run on My Computer</strong> check box.</li><li>Select the <strong>Allow active content to run in files on My Computer</strong> check box.</li><li>Click <strong>OK</strong> to save your changes.</li></ol></body>
